/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export declare namespace FiniteField {
  export type ZpStruct = { value: BigNumberish };

  export type ZpStructOutput = [value: bigint] & { value: bigint };
}

export declare namespace QuadraticExtension {
  export type Zp_2Struct = { a: FiniteField.ZpStruct; b: FiniteField.ZpStruct };

  export type Zp_2StructOutput = [
    a: FiniteField.ZpStructOutput,
    b: FiniteField.ZpStructOutput
  ] & { a: FiniteField.ZpStructOutput; b: FiniteField.ZpStructOutput };
}

export declare namespace SexticExtension {
  export type Zp_6Struct = {
    a: QuadraticExtension.Zp_2Struct;
    b: QuadraticExtension.Zp_2Struct;
    c: QuadraticExtension.Zp_2Struct;
  };

  export type Zp_6StructOutput = [
    a: QuadraticExtension.Zp_2StructOutput,
    b: QuadraticExtension.Zp_2StructOutput,
    c: QuadraticExtension.Zp_2StructOutput
  ] & {
    a: QuadraticExtension.Zp_2StructOutput;
    b: QuadraticExtension.Zp_2StructOutput;
    c: QuadraticExtension.Zp_2StructOutput;
  };
}

export interface SexticExtensionInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "createElement"
      | "div"
      | "equals"
      | "inverse"
      | "mul"
      | "mul_nonres"
      | "sub"
      | "sum"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createElement",
    values: [
      QuadraticExtension.Zp_2Struct,
      QuadraticExtension.Zp_2Struct,
      QuadraticExtension.Zp_2Struct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "div",
    values: [SexticExtension.Zp_6Struct, SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "equals",
    values: [SexticExtension.Zp_6Struct, SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "inverse",
    values: [SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "mul",
    values: [SexticExtension.Zp_6Struct, SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "mul_nonres",
    values: [SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "sub",
    values: [SexticExtension.Zp_6Struct, SexticExtension.Zp_6Struct]
  ): string;
  encodeFunctionData(
    functionFragment: "sum",
    values: [SexticExtension.Zp_6Struct, SexticExtension.Zp_6Struct]
  ): string;

  decodeFunctionResult(
    functionFragment: "createElement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "div", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "equals", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "inverse", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mul", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mul_nonres", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sub", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sum", data: BytesLike): Result;
}

export interface SexticExtension extends BaseContract {
  connect(runner?: ContractRunner | null): SexticExtension;
  waitForDeployment(): Promise<this>;

  interface: SexticExtensionInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  createElement: TypedContractMethod<
    [
      a: QuadraticExtension.Zp_2Struct,
      b: QuadraticExtension.Zp_2Struct,
      c: QuadraticExtension.Zp_2Struct
    ],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  div: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  equals: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [boolean],
    "view"
  >;

  inverse: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  mul: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  mul_nonres: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  sub: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  sum: TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "createElement"
  ): TypedContractMethod<
    [
      a: QuadraticExtension.Zp_2Struct,
      b: QuadraticExtension.Zp_2Struct,
      c: QuadraticExtension.Zp_2Struct
    ],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "div"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "equals"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "inverse"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "mul"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "mul_nonres"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "sub"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "sum"
  ): TypedContractMethod<
    [x: SexticExtension.Zp_6Struct, y: SexticExtension.Zp_6Struct],
    [SexticExtension.Zp_6StructOutput],
    "view"
  >;

  filters: {};
}
