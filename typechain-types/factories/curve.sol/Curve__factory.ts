/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Curve, CurveInterface } from "../../curve.sol/Curve";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "q",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve_1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "untwist",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50612c9d8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314cb7ac314610046578063354a572514610076578063f4aff064146100a6575b600080fd5b610060600480360381019061005b9190611ef5565b6100d6565b60405161006d9190612209565b60405180910390f35b610090600480360381019061008b919061229b565b61104b565b60405161009d9190612306565b60405180910390f35b6100c060048036038101906100bb91906123bd565b61154b565b6040516100cd9190612306565b60405180910390f35b6100de611a08565b6000601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101b49190612600565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c700da6b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631701474273__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63901717d16040518163ffffffff1660e01b8152600401600060405180830381865af4158015610279573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102a29190612649565b6040518263ffffffff1660e01b81526004016102be91906126e2565b600060405180830381865afa1580156102db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103049190612704565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061039a9190612704565b6040518363ffffffff1660e01b81526004016103b7929190612777565b600060405180830381865afa1580156103d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103fd9190612600565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104939190612600565b6040518463ffffffff1660e01b81526004016104b1939291906127f2565b600060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104f791906128f6565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e8760200151601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106129190612600565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561067f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106a89190612600565b6040518463ffffffff1660e01b81526004016106c6939291906127f2565b600060405180830381865afa1580156106e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061070c91906128f6565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107a291906128f6565b6040518363ffffffff1660e01b81526004016107bf92919061299d565b600060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108059190612a5c565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6700795601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061091b91906128f6565b876040518363ffffffff1660e01b815260040161093992919061299d565b600060405180830381865afa158015610956573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097f9190612a5c565b6040518263ffffffff1660e01b815260040161099b9190612ae9565b600060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109e19190612a5c565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e8960400151601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ad3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610afc9190612600565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b929190612600565b6040518463ffffffff1660e01b8152600401610bb0939291906127f2565b600060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bf691906128f6565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c63573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c8c91906128f6565b6040518363ffffffff1660e01b8152600401610ca992919061299d565b600060405180830381865afa158015610cc6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cef9190612a5c565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6700795601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c388601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e0691906128f6565b6040518363ffffffff1660e01b8152600401610e2392919061299d565b600060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e699190612a5c565b6040518263ffffffff1660e01b8152600401610e859190612ae9565b600060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ecb9190612a5c565b9050604051806060016040528060006001811115610eec57610eeb611f3e565b5b8152602001601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377839c6987876040518363ffffffff1660e01b8152600401610f4e929190612b0b565b600060405180830381865afa158015610f6b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f949190612a5c565b8152602001601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377839c6985856040518363ffffffff1660e01b8152600401610ff6929190612b0b565b600060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061103c9190612a5c565b81525095505050505050919050565b60006001808111156110605761105f611f3e565b5b8260000151600181111561107757611076611f3e565b5b036110855760009050611545565b60008373ffffffffffffffffffffffffffffffffffffffff166307a5ecaa846040015185604001516040518363ffffffff1660e01b81526004016110ca929190612b42565b600060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111109190612600565b905060008473ffffffffffffffffffffffffffffffffffffffff1663fbb740a88673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa8873ffffffffffffffffffffffffffffffffffffffff166307a5ecaa89602001518a602001516040518363ffffffff1660e01b815260040161118f929190612b42565b600060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111d59190612600565b88602001516040518363ffffffff1660e01b81526004016111f7929190612b42565b600060405180830381865afa158015611214573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061123d9190612600565b8773ffffffffffffffffffffffffffffffffffffffff16639d2e83f58973ffffffffffffffffffffffffffffffffffffffff1663c700da6b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6340957f72600460006040518363ffffffff1660e01b81526004016112bb929190612bcd565b600060405180830381865af41580156112d8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113019190612649565b815250601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611371573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061139a9190612704565b6040518363ffffffff1660e01b81526004016113b7929190612777565b600060405180830381865afa1580156113d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113fd9190612600565b6040518263ffffffff1660e01b81526004016114199190612bf6565b600060405180830381865afa158015611436573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061145f9190612600565b6040518363ffffffff1660e01b815260040161147c929190612b42565b600060405180830381865afa158015611499573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114c29190612600565b90508473ffffffffffffffffffffffffffffffffffffffff1663ab80cf7683836040518363ffffffff1660e01b81526004016114ff929190612b42565b602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115409190612c18565b925050505b92915050565b60006001808111156115605761155f611f3e565b5b8260000151600181111561157757611576611f3e565b5b036115855760009050611a03565b6000601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325846040015185604001516040518363ffffffff1660e01b81526004016115ec929190612777565b600060405180830381865afa158015611609573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116329190612704565b90506000601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e2832589602001518a602001516040518363ffffffff1660e01b8152600401611717929190612777565b600060405180830381865afa158015611734573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061175d9190612704565b88602001516040518363ffffffff1660e01b815260040161177f929190612777565b600060405180830381865afa15801561179c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117c59190612704565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663085eb2b9601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1fca2b66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611870573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118999190612704565b6040518263ffffffff1660e01b81526004016118b59190612c45565b600060405180830381865afa1580156118d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118fb9190612704565b6040518363ffffffff1660e01b8152600401611918929190612777565b600060405180830381865afa158015611935573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061195e9190612704565b9050601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4d4555483836040518363ffffffff1660e01b81526004016119bd929190612777565b602060405180830381865afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe9190612c18565b925050505b919050565b604051806060016040528060006001811115611a2757611a26611f3e565b5b8152602001611a34611a47565b8152602001611a41611a47565b81525090565b6040518060400160405280611a5a611a6d565b8152602001611a67611a6d565b81525090565b6040518060600160405280611a80611aa0565b8152602001611a8d611aa0565b8152602001611a9a611aa0565b81525090565b6040518060400160405280611ab3611ac6565b8152602001611ac0611ac6565b81525090565b6040518060200160405280611ad9611adf565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b6482611b1b565b810181811067ffffffffffffffff82111715611b8357611b82611b2c565b5b80604052505050565b6000611b96611b02565b9050611ba28282611b5b565b919050565b600080fd5b60028110611bb957600080fd5b50565b600081359050611bcb81611bac565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115611bf657611bf5611b2c565b5b611bff82611b1b565b9050602081019050919050565b82818337600083830152505050565b6000611c2e611c2984611bdb565b611b8c565b905082815260208101848484011115611c4a57611c49611bd6565b5b611c55848285611c0c565b509392505050565b600082601f830112611c7257611c71611bd1565b5b8135611c82848260208601611c1b565b91505092915050565b60008115159050919050565b611ca081611c8b565b8114611cab57600080fd5b50565b600081359050611cbd81611c97565b92915050565b6000819050919050565b611cd681611cc3565b8114611ce157600080fd5b50565b600081359050611cf381611ccd565b92915050565b600060608284031215611d0f57611d0e611b16565b5b611d196060611b8c565b9050600082013567ffffffffffffffff811115611d3957611d38611ba7565b5b611d4584828501611c5d565b6000830152506020611d5984828501611cae565b6020830152506040611d6d84828501611ce4565b60408301525092915050565b600060208284031215611d8f57611d8e611b16565b5b611d996020611b8c565b9050600082013567ffffffffffffffff811115611db957611db8611ba7565b5b611dc584828501611cf9565b60008301525092915050565b600060408284031215611de757611de6611b16565b5b611df16040611b8c565b9050600082013567ffffffffffffffff811115611e1157611e10611ba7565b5b611e1d84828501611d79565b600083015250602082013567ffffffffffffffff811115611e4157611e40611ba7565b5b611e4d84828501611d79565b60208301525092915050565b600060608284031215611e6f57611e6e611b16565b5b611e796060611b8c565b90506000611e8984828501611bbc565b600083015250602082013567ffffffffffffffff811115611ead57611eac611ba7565b5b611eb984828501611dd1565b602083015250604082013567ffffffffffffffff811115611edd57611edc611ba7565b5b611ee984828501611dd1565b60408301525092915050565b600060208284031215611f0b57611f0a611b0c565b5b600082013567ffffffffffffffff811115611f2957611f28611b11565b5b611f3584828501611e59565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611f7e57611f7d611f3e565b5b50565b6000819050611f8f82611f6d565b919050565b6000611f9f82611f81565b9050919050565b611faf81611f94565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fef578082015181840152602081019050611fd4565b60008484015250505050565b600061200682611fb5565b6120108185611fc0565b9350612020818560208601611fd1565b61202981611b1b565b840191505092915050565b61203d81611c8b565b82525050565b61204c81611cc3565b82525050565b6000606083016000830151848203600086015261206f8282611ffb565b91505060208301516120846020860182612034565b5060408301516120976040860182612043565b508091505092915050565b600060208301600083015184820360008601526120bf8282612052565b9150508091505092915050565b600060408301600083015184820360008601526120e982826120a2565b9150506020830151848203602086015261210382826120a2565b9150508091505092915050565b6000606083016000830151848203600086015261212d82826120cc565b9150506020830151848203602086015261214782826120cc565b9150506040830151848203604086015261216182826120cc565b9150508091505092915050565b6000604083016000830151848203600086015261218b8282612110565b915050602083015184820360208601526121a58282612110565b9150508091505092915050565b60006060830160008301516121ca6000860182611fa6565b50602083015184820360208601526121e2828261216e565b915050604083015184820360408601526121fc828261216e565b9150508091505092915050565b6000602082019050818103600083015261222381846121b2565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122568261222b565b9050919050565b60006122688261224b565b9050919050565b6122788161225d565b811461228357600080fd5b50565b6000813590506122958161226f565b92915050565b600080604083850312156122b2576122b1611b0c565b5b60006122c085828601612286565b925050602083013567ffffffffffffffff8111156122e1576122e0611b11565b5b6122ed85828601611e59565b9150509250929050565b61230081611c8b565b82525050565b600060208201905061231b60008301846122f7565b92915050565b60006060828403121561233757612336611b16565b5b6123416060611b8c565b9050600061235184828501611bbc565b600083015250602082013567ffffffffffffffff81111561237557612374611ba7565b5b61238184828501611d79565b602083015250604082013567ffffffffffffffff8111156123a5576123a4611ba7565b5b6123b184828501611d79565b60408301525092915050565b6000602082840312156123d3576123d2611b0c565b5b600082013567ffffffffffffffff8111156123f1576123f0611b11565b5b6123fd84828501612321565b91505092915050565b600061241961241484611bdb565b611b8c565b90508281526020810184848401111561243557612434611bd6565b5b612440848285611fd1565b509392505050565b600082601f83011261245d5761245c611bd1565b5b815161246d848260208601612406565b91505092915050565b60008151905061248581611c97565b92915050565b60008151905061249a81611ccd565b92915050565b6000606082840312156124b6576124b5611b16565b5b6124c06060611b8c565b9050600082015167ffffffffffffffff8111156124e0576124df611ba7565b5b6124ec84828501612448565b600083015250602061250084828501612476565b60208301525060406125148482850161248b565b60408301525092915050565b60006020828403121561253657612535611b16565b5b6125406020611b8c565b9050600082015167ffffffffffffffff8111156125605761255f611ba7565b5b61256c848285016124a0565b60008301525092915050565b60006040828403121561258e5761258d611b16565b5b6125986040611b8c565b9050600082015167ffffffffffffffff8111156125b8576125b7611ba7565b5b6125c484828501612520565b600083015250602082015167ffffffffffffffff8111156125e8576125e7611ba7565b5b6125f484828501612520565b60208301525092915050565b60006020828403121561261657612615611b0c565b5b600082015167ffffffffffffffff81111561263457612633611b11565b5b61264084828501612578565b91505092915050565b60006020828403121561265f5761265e611b0c565b5b600082015167ffffffffffffffff81111561267d5761267c611b11565b5b612689848285016124a0565b91505092915050565b600060608301600083015184820360008601526126af8282611ffb565b91505060208301516126c46020860182612034565b5060408301516126d76040860182612043565b508091505092915050565b600060208201905081810360008301526126fc8184612692565b905092915050565b60006020828403121561271a57612719611b0c565b5b600082015167ffffffffffffffff81111561273857612737611b11565b5b61274484828501612520565b91505092915050565b6000602083016000830151848203600086015261276a8282612052565b9150508091505092915050565b60006040820190508181036000830152612791818561274d565b905081810360208301526127a5818461274d565b90509392505050565b600060408301600083015184820360008601526127cb82826120a2565b915050602083015184820360208601526127e582826120a2565b9150508091505092915050565b6000606082019050818103600083015261280c81866127ae565b9050818103602083015261282081856127ae565b9050818103604083015261283481846127ae565b9050949350505050565b60006060828403121561285457612853611b16565b5b61285e6060611b8c565b9050600082015167ffffffffffffffff81111561287e5761287d611ba7565b5b61288a84828501612578565b600083015250602082015167ffffffffffffffff8111156128ae576128ad611ba7565b5b6128ba84828501612578565b602083015250604082015167ffffffffffffffff8111156128de576128dd611ba7565b5b6128ea84828501612578565b60408301525092915050565b60006020828403121561290c5761290b611b0c565b5b600082015167ffffffffffffffff81111561292a57612929611b11565b5b6129368482850161283e565b91505092915050565b6000606083016000830151848203600086015261295c82826120cc565b9150506020830151848203602086015261297682826120cc565b9150506040830151848203604086015261299082826120cc565b9150508091505092915050565b600060408201905081810360008301526129b7818561293f565b905081810360208301526129cb818461293f565b90509392505050565b6000604082840312156129ea576129e9611b16565b5b6129f46040611b8c565b9050600082015167ffffffffffffffff811115612a1457612a13611ba7565b5b612a208482850161283e565b600083015250602082015167ffffffffffffffff811115612a4457612a43611ba7565b5b612a508482850161283e565b60208301525092915050565b600060208284031215612a7257612a71611b0c565b5b600082015167ffffffffffffffff811115612a9057612a8f611b11565b5b612a9c848285016129d4565b91505092915050565b60006040830160008301518482036000860152612ac28282612110565b91505060208301518482036020860152612adc8282612110565b9150508091505092915050565b60006020820190508181036000830152612b038184612aa5565b905092915050565b60006040820190508181036000830152612b258185612aa5565b90508181036020830152612b398184612aa5565b90509392505050565b60006040820190508181036000830152612b5c81856127ae565b90508181036020830152612b7081846127ae565b90509392505050565b6000819050919050565b6000819050919050565b6000612ba8612ba3612b9e84612b79565b612b83565b611cc3565b9050919050565b612bb881612b8d565b82525050565b612bc781611c8b565b82525050565b6000604082019050612be26000830185612baf565b612bef6020830184612bbe565b9392505050565b60006020820190508181036000830152612c1081846127ae565b905092915050565b600060208284031215612c2e57612c2d611b0c565b5b6000612c3c84828501612476565b91505092915050565b60006020820190508181036000830152612c5f818461274d565b90509291505056fea2646970667358221220e8e4fe8137d55bd47f17aaf86e301117b3f5236bbe96051b0aa8006a245efb9264736f6c634300081b0033";

type CurveConstructorParams =
  | [linkLibraryAddresses: CurveLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Curve__factory extends ContractFactory {
  constructor(...args: CurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Curve__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: CurveLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Curve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Curve__factory {
    return super.connect(runner) as Curve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveInterface {
    return new Interface(_abi) as CurveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Curve {
    return new Contract(address, _abi, runner) as unknown as Curve;
  }
}

export interface CurveLibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
