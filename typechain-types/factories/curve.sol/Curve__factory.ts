/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Curve, CurveInterface } from "../../curve.sol/Curve";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FiniteField",
        name: "f",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_0",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve_0",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "q",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve_1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "untwist",
    outputs: [
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "value",
                            type: "uint256",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061230b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063354bce55146100465780638fe7108314610076578063d6859691146100a6575b600080fd5b610060600480360381019061005b9190611a56565b6100d6565b60405161006d9190611ab1565b60405180910390f35b610090600480360381019061008b9190611bbe565b610494565b60405161009d9190611ab1565b60405180910390f35b6100c060048036038101906100bb9190611bfe565b6108ec565b6040516100cd9190611db2565b60405180910390f35b60006001808111156100eb576100ea611c2b565b5b8260000151600181111561010257610101611c2b565b5b03610110576000905061048e565b60008373ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a846040015185604001516040518363ffffffff1660e01b8152600401610155929190611dea565b602060405180830381865afa158015610172573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101969190611e64565b905060008473ffffffffffffffffffffffffffffffffffffffff1663a253aeee8673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a8873ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a89602001518a602001516040518363ffffffff1660e01b8152600401610215929190611dea565b602060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190611e64565b88602001516040518363ffffffff1660e01b8152600401610278929190611dea565b602060405180830381865afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190611e64565b8773ffffffffffffffffffffffffffffffffffffffff1663aa28c5be8973ffffffffffffffffffffffffffffffffffffffff1663c452494760046040518263ffffffff1660e01b815260040161030f9190611ed6565b602060405180830381865afa15801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190611e64565b6040518263ffffffff1660e01b815260040161036c9190611ef1565b602060405180830381865afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad9190611e64565b6040518363ffffffff1660e01b81526004016103ca929190611dea565b602060405180830381865afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190611e64565b90508473ffffffffffffffffffffffffffffffffffffffff1663d629f52883836040518363ffffffff1660e01b8152600401610448929190611dea565b602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190611f38565b925050505b92915050565b60006001808111156104a9576104a8611c2b565b5b826000015160018111156104c0576104bf611c2b565b5b036104ce57600090506108e6565b60008373ffffffffffffffffffffffffffffffffffffffff166359607422846040015185604001516040518363ffffffff1660e01b8152600401610513929190611f94565b6040805180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610553919061200d565b905060008473ffffffffffffffffffffffffffffffffffffffff1663f73f27028673ffffffffffffffffffffffffffffffffffffffff1663596074228873ffffffffffffffffffffffffffffffffffffffff16635960742289602001518a602001516040518363ffffffff1660e01b81526004016105d2929190611f94565b6040805180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610612919061200d565b88602001516040518363ffffffff1660e01b8152600401610634929190611f94565b6040805180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610674919061200d565b8773ffffffffffffffffffffffffffffffffffffffff16633edf76af8973ffffffffffffffffffffffffffffffffffffffff16632966679a60405180602001604052806004815250600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190611e64565b6040518363ffffffff1660e01b815260040161076a929190611dea565b6040805180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa919061200d565b6040518263ffffffff1660e01b81526004016107c6919061203a565b6040805180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610806919061200d565b6040518363ffffffff1660e01b8152600401610823929190611f94565b6040805180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610863919061200d565b90508473ffffffffffffffffffffffffffffffffffffffff16639d59dc9983836040518363ffffffff1660e01b81526004016108a0929190611f94565b602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190611f38565b925050505b92915050565b6108f461177a565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d98acb2f600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c4919061200d565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632966679a600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c452494760016040518263ffffffff1660e01b8152600401610a5e9190612090565b602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190611e64565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190611e64565b6040518363ffffffff1660e01b8152600401610b4d929190611dea565b6040805180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d919061200d565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d919061200d565b6040518463ffffffff1660e01b8152600401610c3b939291906120ab565b60c060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190612146565b90506000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637212f8e4600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d98acb2f8760200151600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa158015610d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d91919061200d565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa158015610dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e21919061200d565b6040518463ffffffff1660e01b8152600401610e3f939291906120ab565b60c060405180830381865afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e809190612146565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b815260040160c060405180830381865afa158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190612146565b6040518363ffffffff1660e01b8152600401610f2e9291906121b5565b61018060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190612230565b90506000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391a1dc78600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637212f8e4600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b815260040160c060405180830381865afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190612146565b876040518363ffffffff1660e01b815260040161109f9291906121b5565b61018060405180830381865afa1580156110bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e19190612230565b6040518263ffffffff1660e01b81526004016110fd919061228e565b61018060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f9190612230565b90506000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637212f8e4600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d98acb2f8960400151600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa158015611230573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611254919061200d565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b81526004016040805180830381865afa1580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e4919061200d565b6040518463ffffffff1660e01b8152600401611302939291906120ab565b60c060405180830381865afa15801561131f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113439190612146565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b815260040160c060405180830381865afa1580156113b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d49190612146565b6040518363ffffffff1660e01b81526004016113f19291906121b5565b61018060405180830381865afa15801561140f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114339190612230565b90506000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391a1dc78600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637212f8e488600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b815260040160c060405180830381865afa158015611521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115459190612146565b6040518363ffffffff1660e01b81526004016115629291906121b5565b61018060405180830381865afa158015611580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a49190612230565b6040518263ffffffff1660e01b81526004016115c0919061228e565b61018060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190612230565b905060405180606001604052806000600181111561162357611622611c2b565b5b8152602001600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631694699987876040518363ffffffff1660e01b81526004016116859291906122aa565b61018060405180830381865afa1580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c79190612230565b8152602001600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631694699985856040518363ffffffff1660e01b81526004016117299291906122aa565b61018060405180830381865afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176b9190612230565b81525095505050505050919050565b60405180606001604052806000600181111561179957611798611c2b565b5b81526020016117a66117b9565b81526020016117b36117b9565b81525090565b60405180604001604052806117cc6117df565b81526020016117d96117df565b81525090565b60405180606001604052806117f2611812565b81526020016117ff611812565b815260200161180c611812565b81525090565b6040518060400160405280611825611838565b8152602001611832611838565b81525090565b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118858261185a565b9050919050565b60006118978261187a565b9050919050565b6118a78161188c565b81146118b257600080fd5b50565b6000813590506118c48161189e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611918826118cf565b810181811067ffffffffffffffff82111715611937576119366118e0565b5b80604052505050565b600061194a61184b565b9050611956828261190f565b919050565b6002811061196857600080fd5b50565b60008135905061197a8161195b565b92915050565b6000819050919050565b61199381611980565b811461199e57600080fd5b50565b6000813590506119b08161198a565b92915050565b6000602082840312156119cc576119cb6118ca565b5b6119d66020611940565b905060006119e6848285016119a1565b60008301525092915050565b600060608284031215611a0857611a076118ca565b5b611a126060611940565b90506000611a228482850161196b565b6000830152506020611a36848285016119b6565b6020830152506040611a4a848285016119b6565b60408301525092915050565b60008060808385031215611a6d57611a6c611855565b5b6000611a7b858286016118b5565b9250506020611a8c858286016119f2565b9150509250929050565b60008115159050919050565b611aab81611a96565b82525050565b6000602082019050611ac66000830184611aa2565b92915050565b6000611ad78261187a565b9050919050565b611ae781611acc565b8114611af257600080fd5b50565b600081359050611b0481611ade565b92915050565b600060408284031215611b2057611b1f6118ca565b5b611b2a6040611940565b90506000611b3a848285016119b6565b6000830152506020611b4e848285016119b6565b60208301525092915050565b600060a08284031215611b7057611b6f6118ca565b5b611b7a6060611940565b90506000611b8a8482850161196b565b6000830152506020611b9e84828501611b0a565b6020830152506060611bb284828501611b0a565b60408301525092915050565b60008060c08385031215611bd557611bd4611855565b5b6000611be385828601611af5565b9250506020611bf485828601611b5a565b9150509250929050565b600060a08284031215611c1457611c13611855565b5b6000611c2284828501611b5a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611c6b57611c6a611c2b565b5b50565b6000819050611c7c82611c5a565b919050565b6000611c8c82611c6e565b9050919050565b611c9c81611c81565b82525050565b611cab81611980565b82525050565b602082016000820151611cc76000850182611ca2565b50505050565b604082016000820151611ce36000850182611cb1565b506020820151611cf66020850182611cb1565b50505050565b60c082016000820151611d126000850182611ccd565b506020820151611d256040850182611ccd565b506040820151611d386080850182611ccd565b50505050565b61018082016000820151611d556000850182611cfc565b506020820151611d6860c0850182611cfc565b50505050565b61032082016000820151611d856000850182611c93565b506020820151611d986020850182611d3e565b506040820151611dac6101a0850182611d3e565b50505050565b600061032082019050611dc86000830184611d6e565b92915050565b602082016000820151611de46000850182611ca2565b50505050565b6000604082019050611dff6000830185611dce565b611e0c6020830184611dce565b9392505050565b600081519050611e228161198a565b92915050565b600060208284031215611e3e57611e3d6118ca565b5b611e486020611940565b90506000611e5884828501611e13565b60008301525092915050565b600060208284031215611e7a57611e79611855565b5b6000611e8884828501611e28565b91505092915050565b6000819050919050565b6000819050919050565b6000611ec0611ebb611eb684611e91565b611e9b565b611980565b9050919050565b611ed081611ea5565b82525050565b6000602082019050611eeb6000830184611ec7565b92915050565b6000602082019050611f066000830184611dce565b92915050565b611f1581611a96565b8114611f2057600080fd5b50565b600081519050611f3281611f0c565b92915050565b600060208284031215611f4e57611f4d611855565b5b6000611f5c84828501611f23565b91505092915050565b604082016000820151611f7b6000850182611cb1565b506020820151611f8e6020850182611cb1565b50505050565b6000608082019050611fa96000830185611f65565b611fb66040830184611f65565b9392505050565b600060408284031215611fd357611fd26118ca565b5b611fdd6040611940565b90506000611fed84828501611e28565b600083015250602061200184828501611e28565b60208301525092915050565b60006040828403121561202357612022611855565b5b600061203184828501611fbd565b91505092915050565b600060408201905061204f6000830184611f65565b92915050565b6000819050919050565b600061207a61207561207084612055565b611e9b565b611980565b9050919050565b61208a8161205f565b82525050565b60006020820190506120a56000830184612081565b92915050565b600060c0820190506120c06000830186611f65565b6120cd6040830185611f65565b6120da6080830184611f65565b949350505050565b600060c082840312156120f8576120f76118ca565b5b6121026060611940565b9050600061211284828501611fbd565b600083015250604061212684828501611fbd565b602083015250608061213a84828501611fbd565b60408301525092915050565b600060c0828403121561215c5761215b611855565b5b600061216a848285016120e2565b91505092915050565b60c0820160008201516121896000850182611ccd565b50602082015161219c6040850182611ccd565b5060408201516121af6080850182611ccd565b50505050565b6000610180820190506121cb6000830185612173565b6121d860c0830184612173565b9392505050565b600061018082840312156121f6576121f56118ca565b5b6122006040611940565b90506000612210848285016120e2565b60008301525060c0612224848285016120e2565b60208301525092915050565b6000610180828403121561224757612246611855565b5b6000612255848285016121df565b91505092915050565b610180820160008201516122756000850182611cfc565b50602082015161228860c0850182611cfc565b50505050565b6000610180820190506122a4600083018461225e565b92915050565b6000610300820190506122c0600083018561225e565b6122ce61018083018461225e565b939250505056fea264697066735822122051196cf56d052a96fe8a83671ddd8c02645e7fd63bd85ada15fd44df33cb98f164736f6c634300081b0033";

type CurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Curve__factory extends ContractFactory {
  constructor(...args: CurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Curve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Curve__factory {
    return super.connect(runner) as Curve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveInterface {
    return new Interface(_abi) as CurveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Curve {
    return new Contract(address, _abi, runner) as unknown as Curve;
  }
}
