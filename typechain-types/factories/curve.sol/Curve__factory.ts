/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Curve, CurveInterface } from "../../curve.sol/Curve";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BigFiniteField",
        name: "f",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_0",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve_0",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "q",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "isOnCurve_1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_1",
        name: "p",
        type: "tuple",
      },
    ],
    name: "untwist",
    outputs: [
      {
        components: [
          {
            internalType: "enum Curve.PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "a",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "b",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "a",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            components: [
                              {
                                internalType: "bytes",
                                name: "val",
                                type: "bytes",
                              },
                              {
                                internalType: "bool",
                                name: "neg",
                                type: "bool",
                              },
                              {
                                internalType: "uint256",
                                name: "bitlen",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct BigNumber",
                            name: "value",
                            type: "tuple",
                          },
                        ],
                        internalType: "struct Zp",
                        name: "b",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Zp_2",
                    name: "c",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp_6",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_12",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Curve.Point_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50612c8c8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314cb7ac314610046578063354a5725146100765780638d7c4bc0146100a6575b600080fd5b610060600480360381019061005b9190611e93565b6100d6565b60405161006d91906121a7565b60405180910390f35b610090600480360381019061008b9190612239565b61104b565b60405161009d91906122a4565b60405180910390f35b6100c060048036038101906100bb9190612399565b61154b565b6040516100cd91906122a4565b60405180910390f35b6100de6119a6565b6000601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101b491906125ef565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c700da6b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631701474273__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63901717d16040518163ffffffff1660e01b8152600401600060405180830381865af4158015610279573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102a29190612638565b6040518263ffffffff1660e01b81526004016102be91906126d1565b600060405180830381865afa1580156102db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061030491906126f3565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061039a91906126f3565b6040518363ffffffff1660e01b81526004016103b7929190612766565b600060405180830381865afa1580156103d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103fd91906125ef565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061049391906125ef565b6040518463ffffffff1660e01b81526004016104b1939291906127e1565b600060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104f791906128e5565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e8760200151601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061061291906125ef565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561067f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106a891906125ef565b6040518463ffffffff1660e01b81526004016106c6939291906127e1565b600060405180830381865afa1580156106e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061070c91906128e5565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107a291906128e5565b6040518363ffffffff1660e01b81526004016107bf92919061298c565b600060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108059190612a4b565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6700795601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061091b91906128e5565b876040518363ffffffff1660e01b815260040161093992919061298c565b600060405180830381865afa158015610956573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097f9190612a4b565b6040518263ffffffff1660e01b815260040161099b9190612ad8565b600060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109e19190612a4b565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c3601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639faceb7e8960400151601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ad3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610afc91906125ef565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b9291906125ef565b6040518463ffffffff1660e01b8152600401610bb0939291906127e1565b600060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bf691906128e5565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c63573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c8c91906128e5565b6040518363ffffffff1660e01b8152600401610ca992919061298c565b600060405180830381865afa158015610cc6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cef9190612a4b565b90506000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6700795601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f87386c388601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e0691906128e5565b6040518363ffffffff1660e01b8152600401610e2392919061298c565b600060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e699190612a4b565b6040518263ffffffff1660e01b8152600401610e859190612ad8565b600060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ecb9190612a4b565b9050604051806060016040528060006001811115610eec57610eeb611edc565b5b8152602001601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377839c6987876040518363ffffffff1660e01b8152600401610f4e929190612afa565b600060405180830381865afa158015610f6b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f949190612a4b565b8152602001601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377839c6985856040518363ffffffff1660e01b8152600401610ff6929190612afa565b600060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061103c9190612a4b565b81525095505050505050919050565b60006001808111156110605761105f611edc565b5b8260000151600181111561107757611076611edc565b5b036110855760009050611545565b60008373ffffffffffffffffffffffffffffffffffffffff166307a5ecaa846040015185604001516040518363ffffffff1660e01b81526004016110ca929190612b31565b600060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061111091906125ef565b905060008473ffffffffffffffffffffffffffffffffffffffff1663fbb740a88673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa8873ffffffffffffffffffffffffffffffffffffffff166307a5ecaa89602001518a602001516040518363ffffffff1660e01b815260040161118f929190612b31565b600060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111d591906125ef565b88602001516040518363ffffffff1660e01b81526004016111f7929190612b31565b600060405180830381865afa158015611214573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061123d91906125ef565b8773ffffffffffffffffffffffffffffffffffffffff16639d2e83f58973ffffffffffffffffffffffffffffffffffffffff1663c700da6b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6340957f72600460006040518363ffffffff1660e01b81526004016112bb929190612bbc565b600060405180830381865af41580156112d8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113019190612638565b815250601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611371573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061139a91906126f3565b6040518363ffffffff1660e01b81526004016113b7929190612766565b600060405180830381865afa1580156113d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113fd91906125ef565b6040518263ffffffff1660e01b81526004016114199190612be5565b600060405180830381865afa158015611436573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061145f91906125ef565b6040518363ffffffff1660e01b815260040161147c929190612b31565b600060405180830381865afa158015611499573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114c291906125ef565b90508473ffffffffffffffffffffffffffffffffffffffff1663ab80cf7683836040518363ffffffff1660e01b81526004016114ff929190612b31565b602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115409190612c07565b925050505b92915050565b60006001808111156115605761155f611edc565b5b8260000151600181111561157757611576611edc565b5b0361158557600090506119a0565b60008373ffffffffffffffffffffffffffffffffffffffff1663b5e28325846040015185604001516040518363ffffffff1660e01b81526004016115ca929190612766565b600060405180830381865afa1580156115e7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061161091906126f3565b905060008473ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e8673ffffffffffffffffffffffffffffffffffffffff1663b5e283258873ffffffffffffffffffffffffffffffffffffffff1663b5e2832589602001518a602001516040518363ffffffff1660e01b815260040161168f929190612766565b600060405180830381865afa1580156116ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116d591906126f3565b88602001516040518363ffffffff1660e01b81526004016116f7929190612766565b600060405180830381865afa158015611714573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061173d91906126f3565b8773ffffffffffffffffffffffffffffffffffffffff1663085eb2b98973ffffffffffffffffffffffffffffffffffffffff16631701474273__$7db5d2dbc3ae63372df6c39d501ad0f72a$";

type CurveConstructorParams =
  | [linkLibraryAddresses: CurveLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Curve__factory extends ContractFactory {
  constructor(...args: CurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Curve__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: CurveLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Curve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Curve__factory {
    return super.connect(runner) as Curve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveInterface {
    return new Interface(_abi) as CurveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Curve {
    return new Contract(address, _abi, runner) as unknown as Curve;
  }
}

export interface CurveLibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
