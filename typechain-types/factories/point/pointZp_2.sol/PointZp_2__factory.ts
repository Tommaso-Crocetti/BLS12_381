/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PointZp_2,
  PointZp_2Interface,
} from "../../../point/pointZp_2.sol/PointZp_2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "field",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "other",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "b",
        type: "tuple",
      },
    ],
    name: "compare",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "double",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "k",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "multiply",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "newPoint",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "point_at_infinity",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612a42380380612a42833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b612919806101296000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806324dca0c714610067578063292310eb1461009757806355e359c8146100b55780638c9d83c1146100e55780639c3e8627146101155780639ee46fb314610145575b600080fd5b610081600480360381019061007c9190611f96565b610175565b60405161008e9190612237565b60405180910390f35b61009f610c63565b6040516100ac9190612237565b60405180910390f35b6100cf60048036038101906100ca9190612259565b610dc3565b6040516100dc9190612237565b60405180910390f35b6100ff60048036038101906100fa91906122d1565b610ef9565b60405161010c9190612237565b60405180910390f35b61012f600480360381019061012a9190611f96565b610f37565b60405161013c9190612358565b60405180910390f35b61015f600480360381019061015a9190612373565b61116c565b60405161016c9190612237565b60405180910390f35b61017d611b02565b6001808111156101905761018f61200e565b5b836000015160018111156101a7576101a661200e565b5b036101b457819050610c5d565b6001808111156101c7576101c661200e565b5b826000015160018111156101de576101dd61200e565b5b036101eb57829050610c5d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b815260040161024e929190612400565b602060405180830381865afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f919061244c565b801561033b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b81526004016102f9929190612400565b602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a919061244c565b5b15610350576103498361116c565b9050610c5d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b81526004016103b3929190612400565b602060405180830381865afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f4919061244c565b80156104a1575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b815260040161045e929190612400565b602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f919061244c565b155b156105dd576105d660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610514573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053d919061265e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105d1919061265e565b610ef9565b9050610c5d565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d4866040015188604001516040518363ffffffff1660e01b815260040161067f929190612400565b600060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106c5919061265e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d489602001518b602001516040518363ffffffff1660e01b8152600401610764929190612400565b600060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107aa919061265e565b6040518263ffffffff1660e01b81526004016107c691906126a7565b600060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061080c919061265e565b6040518363ffffffff1660e01b8152600401610829929190612400565b600060405180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061086f919061265e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b8152600401610947929190612400565b600060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061098d919061265e565b89602001516040518363ffffffff1660e01b81526004016109af929190612400565b600060405180830381865afa1580156109cc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109f5919061265e565b86602001516040518363ffffffff1660e01b8152600401610a17929190612400565b600060405180830381865afa158015610a34573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a5d919061265e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48b60200151886040518363ffffffff1660e01b8152600401610b39929190612400565b600060405180830381865afa158015610b56573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b7f919061265e565b876040518363ffffffff1660e01b8152600401610b9d929190612400565b600060405180830381865afa158015610bba573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610be3919061265e565b88604001516040518363ffffffff1660e01b8152600401610c05929190612400565b600060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c4b919061265e565b9050610c578282610ef9565b93505050505b92915050565b610c6b611b02565b6040518060600160405280600180811115610c8957610c8861200e565b5b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610cf9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d22919061265e565b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610dbb919061265e565b815250905090565b610dcb611b02565b600015158360200151151514610de057600080fd5b6000610dea610c63565b90506000839050600073__$861e165b3789503b1dee5f6def1855c9ef$__63d57f6fe7876040518263ffffffff1660e01b8152600401610e2a9190612781565b600060405180830381865af4158015610e47573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e70919061286b565b905080600081518110610e8657610e856128b4565b5b602002602001015115610e97578192505b6000600190505b8151811015610eec57610eb08361116c565b9250818181518110610ec557610ec46128b4565b5b602002602001015115610edf57610edc8484610175565b93505b8080600101915050610e9e565b5082935050505092915050565b610f01611b02565b604051806060016040528060006001811115610f2057610f1f61200e565b5b815260200184815260200183815250905092915050565b6000600180811115610f4c57610f4b61200e565b5b83600001516001811115610f6357610f6261200e565b5b148015610f975750600180811115610f7e57610f7d61200e565b5b82600001516001811115610f9557610f9461200e565b5b145b15610fa55760019050611166565b60006001811115610fb957610fb861200e565b5b83600001516001811115610fd057610fcf61200e565b5b148015611005575060006001811115610fec57610feb61200e565b5b826000015160018111156110035761100261200e565b5b145b156111615760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b815260040161106d929190612400565b602060405180830381865afa15801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae919061244c565b801561115a575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b8152600401611118929190612400565b602060405180830381865afa158015611135573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611159919061244c565b5b9050611166565b600090505b92915050565b611174611b02565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76836040015160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611220573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611249919061265e565b6040518363ffffffff1660e01b8152600401611266929190612400565b602060405180830381865afa158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a7919061244c565b156112bb576112b4610c63565b9050611afd565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345caa1176040518163ffffffff1660e01b8152600401600060405180830381865afa1580156113a1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113ca919061265e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa89602001518a602001516040518363ffffffff1660e01b815260040161142d929190612400565b600060405180830381865afa15801561144a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611473919061265e565b6040518363ffffffff1660e01b8152600401611490929190612400565b600060405180830381865afa1580156114ad573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114d6919061265e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865afa1580156115b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906115e2919061265e565b8a604001516040518363ffffffff1660e01b8152600401611604929190612400565b600060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061164a919061265e565b6040518263ffffffff1660e01b815260040161166691906126a7565b600060405180830381865afa158015611683573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116ac919061265e565b6040518363ffffffff1660e01b81526004016116c9929190612400565b600060405180830381865afa1580156116e6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061170f919061265e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b81526004016117e7929190612400565b600060405180830381865afa158015611804573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061182d919061265e565b88602001516040518363ffffffff1660e01b815260040161184f929190612400565b600060405180830381865afa15801561186c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611895919061265e565b86602001516040518363ffffffff1660e01b81526004016118b7929190612400565b600060405180830381865afa1580156118d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118fd919061265e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48a60200151886040518363ffffffff1660e01b81526004016119d9929190612400565b600060405180830381865afa1580156119f6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611a1f919061265e565b876040518363ffffffff1660e01b8152600401611a3d929190612400565b600060405180830381865afa158015611a5a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611a83919061265e565b87604001516040518363ffffffff1660e01b8152600401611aa5929190612400565b600060405180830381865afa158015611ac2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611aeb919061265e565b9050611af78282610ef9565b93505050505b919050565b604051806060016040528060006001811115611b2157611b2061200e565b5b8152602001611b2e611b41565b8152602001611b3b611b41565b81525090565b6040518060400160405280611b54611b67565b8152602001611b61611b67565b81525090565b6040518060200160405280611b7a611b80565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c0582611bbc565b810181811067ffffffffffffffff82111715611c2457611c23611bcd565b5b80604052505050565b6000611c37611ba3565b9050611c438282611bfc565b919050565b600080fd5b60028110611c5a57600080fd5b50565b600081359050611c6c81611c4d565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115611c9757611c96611bcd565b5b611ca082611bbc565b9050602081019050919050565b82818337600083830152505050565b6000611ccf611cca84611c7c565b611c2d565b905082815260208101848484011115611ceb57611cea611c77565b5b611cf6848285611cad565b509392505050565b600082601f830112611d1357611d12611c72565b5b8135611d23848260208601611cbc565b91505092915050565b60008115159050919050565b611d4181611d2c565b8114611d4c57600080fd5b50565b600081359050611d5e81611d38565b92915050565b6000819050919050565b611d7781611d64565b8114611d8257600080fd5b50565b600081359050611d9481611d6e565b92915050565b600060608284031215611db057611daf611bb7565b5b611dba6060611c2d565b9050600082013567ffffffffffffffff811115611dda57611dd9611c48565b5b611de684828501611cfe565b6000830152506020611dfa84828501611d4f565b6020830152506040611e0e84828501611d85565b60408301525092915050565b600060208284031215611e3057611e2f611bb7565b5b611e3a6020611c2d565b9050600082013567ffffffffffffffff811115611e5a57611e59611c48565b5b611e6684828501611d9a565b60008301525092915050565b600060408284031215611e8857611e87611bb7565b5b611e926040611c2d565b9050600082013567ffffffffffffffff811115611eb257611eb1611c48565b5b611ebe84828501611e1a565b600083015250602082013567ffffffffffffffff811115611ee257611ee1611c48565b5b611eee84828501611e1a565b60208301525092915050565b600060608284031215611f1057611f0f611bb7565b5b611f1a6060611c2d565b90506000611f2a84828501611c5d565b600083015250602082013567ffffffffffffffff811115611f4e57611f4d611c48565b5b611f5a84828501611e72565b602083015250604082013567ffffffffffffffff811115611f7e57611f7d611c48565b5b611f8a84828501611e72565b60408301525092915050565b60008060408385031215611fad57611fac611bad565b5b600083013567ffffffffffffffff811115611fcb57611fca611bb2565b5b611fd785828601611efa565b925050602083013567ffffffffffffffff811115611ff857611ff7611bb2565b5b61200485828601611efa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061204e5761204d61200e565b5b50565b600081905061205f8261203d565b919050565b600061206f82612051565b9050919050565b61207f81612064565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120bf5780820151818401526020810190506120a4565b60008484015250505050565b60006120d682612085565b6120e08185612090565b93506120f08185602086016120a1565b6120f981611bbc565b840191505092915050565b61210d81611d2c565b82525050565b61211c81611d64565b82525050565b6000606083016000830151848203600086015261213f82826120cb565b91505060208301516121546020860182612104565b5060408301516121676040860182612113565b508091505092915050565b6000602083016000830151848203600086015261218f8282612122565b9150508091505092915050565b600060408301600083015184820360008601526121b98282612172565b915050602083015184820360208601526121d38282612172565b9150508091505092915050565b60006060830160008301516121f86000860182612076565b5060208301518482036020860152612210828261219c565b9150506040830151848203604086015261222a828261219c565b9150508091505092915050565b6000602082019050818103600083015261225181846121e0565b905092915050565b600080604083850312156122705761226f611bad565b5b600083013567ffffffffffffffff81111561228e5761228d611bb2565b5b61229a85828601611d9a565b925050602083013567ffffffffffffffff8111156122bb576122ba611bb2565b5b6122c785828601611efa565b9150509250929050565b600080604083850312156122e8576122e7611bad565b5b600083013567ffffffffffffffff81111561230657612305611bb2565b5b61231285828601611e72565b925050602083013567ffffffffffffffff81111561233357612332611bb2565b5b61233f85828601611e72565b9150509250929050565b61235281611d2c565b82525050565b600060208201905061236d6000830184612349565b92915050565b60006020828403121561238957612388611bad565b5b600082013567ffffffffffffffff8111156123a7576123a6611bb2565b5b6123b384828501611efa565b91505092915050565b600060408301600083015184820360008601526123d98282612172565b915050602083015184820360208601526123f38282612172565b9150508091505092915050565b6000604082019050818103600083015261241a81856123bc565b9050818103602083015261242e81846123bc565b90509392505050565b60008151905061244681611d38565b92915050565b60006020828403121561246257612461611bad565b5b600061247084828501612437565b91505092915050565b600061248c61248784611c7c565b611c2d565b9050828152602081018484840111156124a8576124a7611c77565b5b6124b38482856120a1565b509392505050565b600082601f8301126124d0576124cf611c72565b5b81516124e0848260208601612479565b91505092915050565b6000815190506124f881611d6e565b92915050565b60006060828403121561251457612513611bb7565b5b61251e6060611c2d565b9050600082015167ffffffffffffffff81111561253e5761253d611c48565b5b61254a848285016124bb565b600083015250602061255e84828501612437565b6020830152506040612572848285016124e9565b60408301525092915050565b60006020828403121561259457612593611bb7565b5b61259e6020611c2d565b9050600082015167ffffffffffffffff8111156125be576125bd611c48565b5b6125ca848285016124fe565b60008301525092915050565b6000604082840312156125ec576125eb611bb7565b5b6125f66040611c2d565b9050600082015167ffffffffffffffff81111561261657612615611c48565b5b6126228482850161257e565b600083015250602082015167ffffffffffffffff81111561264657612645611c48565b5b6126528482850161257e565b60208301525092915050565b60006020828403121561267457612673611bad565b5b600082015167ffffffffffffffff81111561269257612691611bb2565b5b61269e848285016125d6565b91505092915050565b600060208201905081810360008301526126c181846123bc565b905092915050565b600082825260208201905092915050565b60006126e582612085565b6126ef81856126c9565b93506126ff8185602086016120a1565b61270881611bbc565b840191505092915050565b61271c81611d2c565b82525050565b61272b81611d64565b82525050565b6000606083016000830151848203600086015261274e82826126da565b91505060208301516127636020860182612713565b5060408301516127766040860182612722565b508091505092915050565b6000602082019050818103600083015261279b8184612731565b905092915050565b600067ffffffffffffffff8211156127be576127bd611bcd565b5b602082029050602081019050919050565b600080fd5b60006127e76127e2846127a3565b611c2d565b9050808382526020820190506020840283018581111561280a576128096127cf565b5b835b81811015612833578061281f8882612437565b84526020840193505060208101905061280c565b5050509392505050565b600082601f83011261285257612851611c72565b5b81516128628482602086016127d4565b91505092915050565b60006020828403121561288157612880611bad565b5b600082015167ffffffffffffffff81111561289f5761289e611bb2565b5b6128ab8482850161283d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212203373c478603be784a7ae3d6fe8ad657f30a1430c8f5db99e67c3512f5e71093c64736f6c634300081b0033";

type PointZp_2ConstructorParams =
  | [linkLibraryAddresses: PointZp_2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PointZp_2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PointZp_2__factory extends ContractFactory {
  constructor(...args: PointZp_2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PointZp_2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: PointZp_2LibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$861e165b3789503b1dee5f6def1855c9ef\\$__", "g"),
      linkLibraryAddresses["contracts/lib/GetBits.sol:GetBits"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(field, overrides || {});
  }
  override deploy(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(field, overrides || {}) as Promise<
      PointZp_2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PointZp_2__factory {
    return super.connect(runner) as PointZp_2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PointZp_2Interface {
    return new Interface(_abi) as PointZp_2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): PointZp_2 {
    return new Contract(address, _abi, runner) as unknown as PointZp_2;
  }
}

export interface PointZp_2LibraryAddresses {
  ["contracts/lib/GetBits.sol:GetBits"]: string;
}
