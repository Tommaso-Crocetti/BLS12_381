/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PointZp_2,
  PointZp_2Interface,
} from "../../../point/pointZp_2.sol/PointZp_2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "field",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "other",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "b",
        type: "tuple",
      },
    ],
    name: "compare",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "double",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "value",
        type: "tuple",
      },
    ],
    name: "getBits",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "k",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "multiply",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "newPoint",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "point_at_infinity",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType_2",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612f01380380612f01833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b612dd8806101296000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806355e359c81161005b57806355e359c8146101005780638c9d83c1146101305780639c3e8627146101605780639ee46fb3146101905761007d565b806324dca0c7146100825780632651909a146100b2578063292310eb146100e2575b600080fd5b61009c600480360381019061009791906122ac565b6101c0565b6040516100a9919061254d565b60405180910390f35b6100cc60048036038101906100c7919061256f565b610cae565b6040516100d99190612667565b60405180910390f35b6100ea610fed565b6040516100f7919061254d565b60405180910390f35b61011a60048036038101906101159190612689565b61114d565b604051610127919061254d565b60405180910390f35b61014a60048036038101906101459190612701565b61120f565b604051610157919061254d565b60405180910390f35b61017a600480360381019061017591906122ac565b61124d565b6040516101879190612788565b60405180910390f35b6101aa60048036038101906101a591906127a3565b611482565b6040516101b7919061254d565b60405180910390f35b6101c8611e18565b6001808111156101db576101da612324565b5b836000015160018111156101f2576101f1612324565b5b036101ff57819050610ca8565b60018081111561021257610211612324565b5b8260000151600181111561022957610228612324565b5b0361023657829050610ca8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b8152600401610299929190612830565b602060405180830381865afa1580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da919061287c565b8015610386575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b8152600401610344929190612830565b602060405180830381865afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610385919061287c565b5b1561039b5761039483611482565b9050610ca8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b81526004016103fe929190612830565b602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f919061287c565b80156104ec575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b81526004016104a9929190612830565b602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea919061287c565b155b156106285761062160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561055f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105889190612a8e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061061c9190612a8e565b61120f565b9050610ca8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d4866040015188604001516040518363ffffffff1660e01b81526004016106ca929190612830565b600060405180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107109190612a8e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d489602001518b602001516040518363ffffffff1660e01b81526004016107af929190612830565b600060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107f59190612a8e565b6040518263ffffffff1660e01b81526004016108119190612ad7565b600060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108579190612a8e565b6040518363ffffffff1660e01b8152600401610874929190612830565b600060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108ba9190612a8e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b8152600401610992929190612830565b600060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109d89190612a8e565b89602001516040518363ffffffff1660e01b81526004016109fa929190612830565b600060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a409190612a8e565b86602001516040518363ffffffff1660e01b8152600401610a62929190612830565b600060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610aa89190612a8e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48b60200151886040518363ffffffff1660e01b8152600401610b84929190612830565b600060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bca9190612a8e565b876040518363ffffffff1660e01b8152600401610be8929190612830565b600060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c2e9190612a8e565b88604001516040518363ffffffff1660e01b8152600401610c50929190612830565b600060405180830381865afa158015610c6d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c969190612a8e565b9050610ca2828261120f565b93505050505b92915050565b6060600080836040015167ffffffffffffffff811115610cd157610cd0611ee3565b5b604051908082528060200260200182016040528015610cff5781602001602082028036833780820191505090505b5090505b73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63aa7312f68573__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af4158015610d67573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d909190612af9565b6040518363ffffffff1660e01b8152600401610dad929190612bfa565b602060405180830381865af4158015610dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dee919061287c565b15610f255773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63ee4a4e4e856040518263ffffffff1660e01b8152600401610e2a9190612c31565b602060405180830381865af4158015610e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6b919061287c565b818381518110610e7e57610e7d612c53565b5b60200260200101901515908115158152505073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__636efac6c78560016040518363ffffffff1660e01b8152600401610eca929190612cc7565b600060405180830381865af4158015610ee7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f109190612af9565b93508180610f1d90612d26565b925050610d03565b60008267ffffffffffffffff811115610f4157610f40611ee3565b5b604051908082528060200260200182016040528015610f6f5781602001602082028036833780820191505090505b50905060005b83811015610fe1578260018286610f8c9190612d6e565b610f969190612d6e565b81518110610fa757610fa6612c53565b5b6020026020010151828281518110610fc257610fc1612c53565b5b6020026020010190151590811515815250508080600101915050610f75565b50809350505050919050565b610ff5611e18565b604051806060016040528060018081111561101357611012612324565b5b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611083573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110ac9190612a8e565b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561111c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111459190612a8e565b815250905090565b611155611e18565b60001515836020015115151461116a57600080fd5b6000611174610fed565b90506000839050600061118686610cae565b90508060008151811061119c5761119b612c53565b5b6020026020010151156111ad578192505b6000600190505b8151811015611202576111c683611482565b92508181815181106111db576111da612c53565b5b6020026020010151156111f5576111f284846101c0565b93505b80806001019150506111b4565b5082935050505092915050565b611217611e18565b60405180606001604052806000600181111561123657611235612324565b5b815260200184815260200183815250905092915050565b600060018081111561126257611261612324565b5b8360000151600181111561127957611278612324565b5b1480156112ad575060018081111561129457611293612324565b5b826000015160018111156112ab576112aa612324565b5b145b156112bb576001905061147c565b600060018111156112cf576112ce612324565b5b836000015160018111156112e6576112e5612324565b5b14801561131b57506000600181111561130257611301612324565b5b8260000151600181111561131957611318612324565b5b145b156114775760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b8152600401611383929190612830565b602060405180830381865afa1580156113a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c4919061287c565b8015611470575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b815260040161142e929190612830565b602060405180830381865afa15801561144b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146f919061287c565b5b905061147c565b600090505b92915050565b61148a611e18565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76836040015160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611536573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061155f9190612a8e565b6040518363ffffffff1660e01b815260040161157c929190612830565b602060405180830381865afa158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bd919061287c565b156115d1576115ca610fed565b9050611e13565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345caa1176040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116b7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116e09190612a8e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa89602001518a602001516040518363ffffffff1660e01b8152600401611743929190612830565b600060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117899190612a8e565b6040518363ffffffff1660e01b81526004016117a6929190612830565b600060405180830381865afa1580156117c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117ec9190612a8e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865afa1580156118cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118f89190612a8e565b8a604001516040518363ffffffff1660e01b815260040161191a929190612830565b600060405180830381865afa158015611937573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906119609190612a8e565b6040518263ffffffff1660e01b815260040161197c9190612ad7565b600060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906119c29190612a8e565b6040518363ffffffff1660e01b81526004016119df929190612830565b600060405180830381865afa1580156119fc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611a259190612a8e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b8152600401611afd929190612830565b600060405180830381865afa158015611b1a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b439190612a8e565b88602001516040518363ffffffff1660e01b8152600401611b65929190612830565b600060405180830381865afa158015611b82573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611bab9190612a8e565b86602001516040518363ffffffff1660e01b8152600401611bcd929190612830565b600060405180830381865afa158015611bea573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c139190612a8e565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48a60200151886040518363ffffffff1660e01b8152600401611cef929190612830565b600060405180830381865afa158015611d0c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611d359190612a8e565b876040518363ffffffff1660e01b8152600401611d53929190612830565b600060405180830381865afa158015611d70573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611d999190612a8e565b87604001516040518363ffffffff1660e01b8152600401611dbb929190612830565b600060405180830381865afa158015611dd8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611e019190612a8e565b9050611e0d828261120f565b93505050505b919050565b604051806060016040528060006001811115611e3757611e36612324565b5b8152602001611e44611e57565b8152602001611e51611e57565b81525090565b6040518060400160405280611e6a611e7d565b8152602001611e77611e7d565b81525090565b6040518060200160405280611e90611e96565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f1b82611ed2565b810181811067ffffffffffffffff82111715611f3a57611f39611ee3565b5b80604052505050565b6000611f4d611eb9565b9050611f598282611f12565b919050565b600080fd5b60028110611f7057600080fd5b50565b600081359050611f8281611f63565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115611fad57611fac611ee3565b5b611fb682611ed2565b9050602081019050919050565b82818337600083830152505050565b6000611fe5611fe084611f92565b611f43565b90508281526020810184848401111561200157612000611f8d565b5b61200c848285611fc3565b509392505050565b600082601f83011261202957612028611f88565b5b8135612039848260208601611fd2565b91505092915050565b60008115159050919050565b61205781612042565b811461206257600080fd5b50565b6000813590506120748161204e565b92915050565b6000819050919050565b61208d8161207a565b811461209857600080fd5b50565b6000813590506120aa81612084565b92915050565b6000606082840312156120c6576120c5611ecd565b5b6120d06060611f43565b9050600082013567ffffffffffffffff8111156120f0576120ef611f5e565b5b6120fc84828501612014565b600083015250602061211084828501612065565b60208301525060406121248482850161209b565b60408301525092915050565b60006020828403121561214657612145611ecd565b5b6121506020611f43565b9050600082013567ffffffffffffffff8111156121705761216f611f5e565b5b61217c848285016120b0565b60008301525092915050565b60006040828403121561219e5761219d611ecd565b5b6121a86040611f43565b9050600082013567ffffffffffffffff8111156121c8576121c7611f5e565b5b6121d484828501612130565b600083015250602082013567ffffffffffffffff8111156121f8576121f7611f5e565b5b61220484828501612130565b60208301525092915050565b60006060828403121561222657612225611ecd565b5b6122306060611f43565b9050600061224084828501611f73565b600083015250602082013567ffffffffffffffff81111561226457612263611f5e565b5b61227084828501612188565b602083015250604082013567ffffffffffffffff81111561229457612293611f5e565b5b6122a084828501612188565b60408301525092915050565b600080604083850312156122c3576122c2611ec3565b5b600083013567ffffffffffffffff8111156122e1576122e0611ec8565b5b6122ed85828601612210565b925050602083013567ffffffffffffffff81111561230e5761230d611ec8565b5b61231a85828601612210565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061236457612363612324565b5b50565b600081905061237582612353565b919050565b600061238582612367565b9050919050565b6123958161237a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123d55780820151818401526020810190506123ba565b60008484015250505050565b60006123ec8261239b565b6123f681856123a6565b93506124068185602086016123b7565b61240f81611ed2565b840191505092915050565b61242381612042565b82525050565b6124328161207a565b82525050565b6000606083016000830151848203600086015261245582826123e1565b915050602083015161246a602086018261241a565b50604083015161247d6040860182612429565b508091505092915050565b600060208301600083015184820360008601526124a58282612438565b9150508091505092915050565b600060408301600083015184820360008601526124cf8282612488565b915050602083015184820360208601526124e98282612488565b9150508091505092915050565b600060608301600083015161250e600086018261238c565b506020830151848203602086015261252682826124b2565b9150506040830151848203604086015261254082826124b2565b9150508091505092915050565b6000602082019050818103600083015261256781846124f6565b905092915050565b60006020828403121561258557612584611ec3565b5b600082013567ffffffffffffffff8111156125a3576125a2611ec8565b5b6125af848285016120b0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006125f0838361241a565b60208301905092915050565b6000602082019050919050565b6000612614826125b8565b61261e81856125c3565b9350612629836125d4565b8060005b8381101561265a57815161264188826125e4565b975061264c836125fc565b92505060018101905061262d565b5085935050505092915050565b600060208201905081810360008301526126818184612609565b905092915050565b600080604083850312156126a05761269f611ec3565b5b600083013567ffffffffffffffff8111156126be576126bd611ec8565b5b6126ca858286016120b0565b925050602083013567ffffffffffffffff8111156126eb576126ea611ec8565b5b6126f785828601612210565b9150509250929050565b6000806040838503121561271857612717611ec3565b5b600083013567ffffffffffffffff81111561273657612735611ec8565b5b61274285828601612188565b925050602083013567ffffffffffffffff81111561276357612762611ec8565b5b61276f85828601612188565b9150509250929050565b61278281612042565b82525050565b600060208201905061279d6000830184612779565b92915050565b6000602082840312156127b9576127b8611ec3565b5b600082013567ffffffffffffffff8111156127d7576127d6611ec8565b5b6127e384828501612210565b91505092915050565b600060408301600083015184820360008601526128098282612488565b915050602083015184820360208601526128238282612488565b9150508091505092915050565b6000604082019050818103600083015261284a81856127ec565b9050818103602083015261285e81846127ec565b90509392505050565b6000815190506128768161204e565b92915050565b60006020828403121561289257612891611ec3565b5b60006128a084828501612867565b91505092915050565b60006128bc6128b784611f92565b611f43565b9050828152602081018484840111156128d8576128d7611f8d565b5b6128e38482856123b7565b509392505050565b600082601f830112612900576128ff611f88565b5b81516129108482602086016128a9565b91505092915050565b60008151905061292881612084565b92915050565b60006060828403121561294457612943611ecd565b5b61294e6060611f43565b9050600082015167ffffffffffffffff81111561296e5761296d611f5e565b5b61297a848285016128eb565b600083015250602061298e84828501612867565b60208301525060406129a284828501612919565b60408301525092915050565b6000602082840312156129c4576129c3611ecd565b5b6129ce6020611f43565b9050600082015167ffffffffffffffff8111156129ee576129ed611f5e565b5b6129fa8482850161292e565b60008301525092915050565b600060408284031215612a1c57612a1b611ecd565b5b612a266040611f43565b9050600082015167ffffffffffffffff811115612a4657612a45611f5e565b5b612a52848285016129ae565b600083015250602082015167ffffffffffffffff811115612a7657612a75611f5e565b5b612a82848285016129ae565b60208301525092915050565b600060208284031215612aa457612aa3611ec3565b5b600082015167ffffffffffffffff811115612ac257612ac1611ec8565b5b612ace84828501612a06565b91505092915050565b60006020820190508181036000830152612af181846127ec565b905092915050565b600060208284031215612b0f57612b0e611ec3565b5b600082015167ffffffffffffffff811115612b2d57612b2c611ec8565b5b612b398482850161292e565b91505092915050565b600082825260208201905092915050565b6000612b5e8261239b565b612b688185612b42565b9350612b788185602086016123b7565b612b8181611ed2565b840191505092915050565b612b9581612042565b82525050565b612ba48161207a565b82525050565b60006060830160008301518482036000860152612bc78282612b53565b9150506020830151612bdc6020860182612b8c565b506040830151612bef6040860182612b9b565b508091505092915050565b60006040820190508181036000830152612c148185612baa565b90508181036020830152612c288184612baa565b90509392505050565b60006020820190508181036000830152612c4b8184612baa565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6000819050919050565b6000612cb1612cac612ca784612c82565b612c8c565b61207a565b9050919050565b612cc181612c96565b82525050565b60006040820190508181036000830152612ce18185612baa565b9050612cf06020830184612cb8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d318261207a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d6357612d62612cf7565b5b600182019050919050565b6000612d798261207a565b9150612d848361207a565b9250828203905081811115612d9c57612d9b612cf7565b5b9291505056fea26469706673582212201a886a79bbb3bec122b30c1ae55cb6aa74c681c00ca29e731bf51c2f0359ca5d64736f6c634300081b0033";

type PointZp_2ConstructorParams =
  | [linkLibraryAddresses: PointZp_2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PointZp_2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PointZp_2__factory extends ContractFactory {
  constructor(...args: PointZp_2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PointZp_2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: PointZp_2LibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(field, overrides || {});
  }
  override deploy(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(field, overrides || {}) as Promise<
      PointZp_2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PointZp_2__factory {
    return super.connect(runner) as PointZp_2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PointZp_2Interface {
    return new Interface(_abi) as PointZp_2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): PointZp_2 {
    return new Contract(address, _abi, runner) as unknown as PointZp_2;
  }
}

export interface PointZp_2LibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
