/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PointZp_2,
  PointZp_2Interface,
} from "../../../point/pointZp_2.sol/PointZp_2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract QuadraticExtension",
        name: "field",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "other",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "double",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "k",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "multiply",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "self",
        type: "tuple",
      },
    ],
    name: "negate",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PointType",
        name: "pointType",
        type: "uint8",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "newPoint",
    outputs: [
      {
        components: [
          {
            internalType: "enum PointType",
            name: "pointType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "x",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                      },
                      {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                      },
                      {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct BigNumber",
                    name: "value",
                    type: "tuple",
                  },
                ],
                internalType: "struct Zp",
                name: "b",
                type: "tuple",
              },
            ],
            internalType: "struct Zp_2",
            name: "y",
            type: "tuple",
          },
        ],
        internalType: "struct Point_Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612e6d380380612e6d833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b612d44806101296000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632106685b1461005c57806324dca0c71461008c57806355e359c8146100bc5780639ee46fb3146100ec578063bedacbae1461011c575b600080fd5b610076600480360381019061007191906122c6565b61014c565b6040516100839190612538565b60405180910390f35b6100a660048036038101906100a1919061255a565b61030c565b6040516100b39190612538565b60405180910390f35b6100d660048036038101906100d191906125d2565b610dfe565b6040516100e39190612538565b60405180910390f35b610106600480360381019061010191906122c6565b611072565b6040516101139190612538565b60405180910390f35b6101366004803603810190610131919061264a565b611b34565b6040516101439190612538565b60405180910390f35b610154611e32565b6001808111156101675761016661230f565b5b8260000151600181111561017e5761017d61230f565b5b036101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590612732565b60405180910390fd5b6103056000836020015160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610298919061294c565b87604001516040518363ffffffff1660e01b81526004016102ba9291906129d9565b600060405180830381865afa1580156102d7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610300919061294c565b611b34565b9050919050565b610314611e32565b6001808111156103275761032661230f565b5b8360000151600181111561033e5761033d61230f565b5b0361034b57819050610df8565b60018081111561035e5761035d61230f565b5b826000015160018111156103755761037461230f565b5b0361038257829050610df8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b81526004016103e59291906129d9565b602060405180830381865afa158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190612a10565b80156104d2575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b81526004016104909291906129d9565b602060405180830381865afa1580156104ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190612a10565b5b156104e7576104e083611072565b9050610df8565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846020015184602001516040518363ffffffff1660e01b815260040161054a9291906129d9565b602060405180830381865afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b9190612a10565b8015610638575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76846040015184604001516040518363ffffffff1660e01b81526004016105f59291906129d9565b602060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190612a10565b155b156107765761076f600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156106ad573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106d6919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610741573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061076a919061294c565b611b34565b9050610df8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d4866040015188604001516040518363ffffffff1660e01b81526004016108189291906129d9565b600060405180830381865afa158015610835573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061085e919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d489602001518b602001516040518363ffffffff1660e01b81526004016108fd9291906129d9565b600060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610943919061294c565b6040518263ffffffff1660e01b815260040161095f9190612a3d565b600060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109a5919061294c565b6040518363ffffffff1660e01b81526004016109c29291906129d9565b600060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a08919061294c565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b8152600401610ae09291906129d9565b600060405180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b26919061294c565b89602001516040518363ffffffff1660e01b8152600401610b489291906129d9565b600060405180830381865afa158015610b65573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b8e919061294c565b86602001516040518363ffffffff1660e01b8152600401610bb09291906129d9565b600060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bf6919061294c565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48b60200151886040518363ffffffff1660e01b8152600401610cd29291906129d9565b600060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d18919061294c565b876040518363ffffffff1660e01b8152600401610d369291906129d9565b600060405180830381865afa158015610d53573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d7c919061294c565b88604001516040518363ffffffff1660e01b8152600401610d9e9291906129d9565b600060405180830381865afa158015610dbb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610de4919061294c565b9050610df260008383611b34565b93505050505b92915050565b610e06611e32565b6000610f3a600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e78573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ea1919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f35919061294c565b611b34565b90508360200151610f5857610f50848483611b72565b91505061106c565b61106873__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63b1d74ee98673__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6340957f726001806040518363ffffffff1660e01b8152600401610fb0929190612ab3565b600060405180830381865af4158015610fcd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ff69190612adc565b6040518363ffffffff1660e01b8152600401611013929190612bdd565b600060405180830381865af4158015611030573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110599190612adc565b6110628561014c565b83611b72565b9150505b92915050565b61107a611e32565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab80cf76836040015160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611126573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061114f919061294c565b6040518363ffffffff1660e01b815260040161116c9291906129d9565b602060405180830381865afa158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ad9190612a10565b156112eb576112e4600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611222573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061124b919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112b6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112df919061294c565b611b34565b9050611b2f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345caa1176040518163ffffffff1660e01b8152600401600060405180830381865afa1580156113d1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113fa919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa89602001518a602001516040518363ffffffff1660e01b815260040161145d9291906129d9565b600060405180830381865afa15801561147a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114a3919061294c565b6040518363ffffffff1660e01b81526004016114c09291906129d9565b600060405180830381865afa1580156114dd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611506919061294c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c044fe60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865afa1580156115e9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611612919061294c565b8a604001516040518363ffffffff1660e01b81526004016116349291906129d9565b600060405180830381865afa158015611651573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061167a919061294c565b6040518263ffffffff1660e01b81526004016116969190612a3d565b600060405180830381865afa1580156116b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116dc919061294c565b6040518363ffffffff1660e01b81526004016116f99291906129d9565b600060405180830381865afa158015611716573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061173f919061294c565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa87886040518363ffffffff1660e01b81526004016118179291906129d9565b600060405180830381865afa158015611834573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061185d919061294c565b88602001516040518363ffffffff1660e01b815260040161187f9291906129d9565b600060405180830381865afa15801561189c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118c5919061294c565b86602001516040518363ffffffff1660e01b81526004016118e79291906129d9565b600060405180830381865afa158015611904573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061192d919061294c565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a5ecaa60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f6910d48a60200151886040518363ffffffff1660e01b8152600401611a099291906129d9565b600060405180830381865afa158015611a26573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611a4f919061294c565b876040518363ffffffff1660e01b8152600401611a6d9291906129d9565b600060405180830381865afa158015611a8a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611ab3919061294c565b87604001516040518363ffffffff1660e01b8152600401611ad59291906129d9565b600060405180830381865afa158015611af2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b1b919061294c565b9050611b2960008383611b34565b93505050505b919050565b611b3c611e32565b6040518060600160405280856001811115611b5a57611b5961230f565b5b81526020018481526020018381525090509392505050565b611b7a611e32565b600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc39804e8673__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af4158015611be0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611c099190612adc565b60006040518463ffffffff1660e01b8152600401611c2993929190612c14565b602060405180830381865af4158015611c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6a9190612c8f565b03611c7757819050611e2b565b73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63ee4a4e4e856040518263ffffffff1660e01b8152600401611cae9190612cbc565b602060405180830381865af4158015611ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cef9190612a10565b15611d9657611d8f73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__636efac6c78660016040518363ffffffff1660e01b8152600401611d31929190612cde565b600060405180830381865af4158015611d4e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611d779190612adc565b611d8085611072565b611d8a858761030c565b611b72565b9050611e2b565b611e2873__$7db5d2dbc3ae63372df6c39d501ad0f72a$__636efac6c78660016040518363ffffffff1660e01b8152600401611dd3929190612cde565b600060405180830381865af4158015611df0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611e199190612adc565b611e2285611072565b84611b72565b90505b9392505050565b604051806060016040528060006001811115611e5157611e5061230f565b5b8152602001611e5e611e71565b8152602001611e6b611e71565b81525090565b6040518060400160405280611e84611e97565b8152602001611e91611e97565b81525090565b6040518060200160405280611eaa611eb0565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f3582611eec565b810181811067ffffffffffffffff82111715611f5457611f53611efd565b5b80604052505050565b6000611f67611ed3565b9050611f738282611f2c565b919050565b600080fd5b60028110611f8a57600080fd5b50565b600081359050611f9c81611f7d565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115611fc757611fc6611efd565b5b611fd082611eec565b9050602081019050919050565b82818337600083830152505050565b6000611fff611ffa84611fac565b611f5d565b90508281526020810184848401111561201b5761201a611fa7565b5b612026848285611fdd565b509392505050565b600082601f83011261204357612042611fa2565b5b8135612053848260208601611fec565b91505092915050565b60008115159050919050565b6120718161205c565b811461207c57600080fd5b50565b60008135905061208e81612068565b92915050565b6000819050919050565b6120a781612094565b81146120b257600080fd5b50565b6000813590506120c48161209e565b92915050565b6000606082840312156120e0576120df611ee7565b5b6120ea6060611f5d565b9050600082013567ffffffffffffffff81111561210a57612109611f78565b5b6121168482850161202e565b600083015250602061212a8482850161207f565b602083015250604061213e848285016120b5565b60408301525092915050565b6000602082840312156121605761215f611ee7565b5b61216a6020611f5d565b9050600082013567ffffffffffffffff81111561218a57612189611f78565b5b612196848285016120ca565b60008301525092915050565b6000604082840312156121b8576121b7611ee7565b5b6121c26040611f5d565b9050600082013567ffffffffffffffff8111156121e2576121e1611f78565b5b6121ee8482850161214a565b600083015250602082013567ffffffffffffffff81111561221257612211611f78565b5b61221e8482850161214a565b60208301525092915050565b6000606082840312156122405761223f611ee7565b5b61224a6060611f5d565b9050600061225a84828501611f8d565b600083015250602082013567ffffffffffffffff81111561227e5761227d611f78565b5b61228a848285016121a2565b602083015250604082013567ffffffffffffffff8111156122ae576122ad611f78565b5b6122ba848285016121a2565b60408301525092915050565b6000602082840312156122dc576122db611edd565b5b600082013567ffffffffffffffff8111156122fa576122f9611ee2565b5b6123068482850161222a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061234f5761234e61230f565b5b50565b60008190506123608261233e565b919050565b600061237082612352565b9050919050565b61238081612365565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123c05780820151818401526020810190506123a5565b60008484015250505050565b60006123d782612386565b6123e18185612391565b93506123f18185602086016123a2565b6123fa81611eec565b840191505092915050565b61240e8161205c565b82525050565b61241d81612094565b82525050565b6000606083016000830151848203600086015261244082826123cc565b91505060208301516124556020860182612405565b5060408301516124686040860182612414565b508091505092915050565b600060208301600083015184820360008601526124908282612423565b9150508091505092915050565b600060408301600083015184820360008601526124ba8282612473565b915050602083015184820360208601526124d48282612473565b9150508091505092915050565b60006060830160008301516124f96000860182612377565b5060208301518482036020860152612511828261249d565b9150506040830151848203604086015261252b828261249d565b9150508091505092915050565b6000602082019050818103600083015261255281846124e1565b905092915050565b6000806040838503121561257157612570611edd565b5b600083013567ffffffffffffffff81111561258f5761258e611ee2565b5b61259b8582860161222a565b925050602083013567ffffffffffffffff8111156125bc576125bb611ee2565b5b6125c88582860161222a565b9150509250929050565b600080604083850312156125e9576125e8611edd565b5b600083013567ffffffffffffffff81111561260757612606611ee2565b5b612613858286016120ca565b925050602083013567ffffffffffffffff81111561263457612633611ee2565b5b6126408582860161222a565b9150509250929050565b60008060006060848603121561266357612662611edd565b5b600061267186828701611f8d565b935050602084013567ffffffffffffffff81111561269257612691611ee2565b5b61269e868287016121a2565b925050604084013567ffffffffffffffff8111156126bf576126be611ee2565b5b6126cb868287016121a2565b9150509250925092565b600082825260208201905092915050565b7f63616e6e6f74206e656761746520706f696e7420617420696e66696e69747900600082015250565b600061271c601f836126d5565b9150612727826126e6565b602082019050919050565b6000602082019050818103600083015261274b8161270f565b9050919050565b600061276561276084611fac565b611f5d565b90508281526020810184848401111561278157612780611fa7565b5b61278c8482856123a2565b509392505050565b600082601f8301126127a9576127a8611fa2565b5b81516127b9848260208601612752565b91505092915050565b6000815190506127d181612068565b92915050565b6000815190506127e68161209e565b92915050565b60006060828403121561280257612801611ee7565b5b61280c6060611f5d565b9050600082015167ffffffffffffffff81111561282c5761282b611f78565b5b61283884828501612794565b600083015250602061284c848285016127c2565b6020830152506040612860848285016127d7565b60408301525092915050565b60006020828403121561288257612881611ee7565b5b61288c6020611f5d565b9050600082015167ffffffffffffffff8111156128ac576128ab611f78565b5b6128b8848285016127ec565b60008301525092915050565b6000604082840312156128da576128d9611ee7565b5b6128e46040611f5d565b9050600082015167ffffffffffffffff81111561290457612903611f78565b5b6129108482850161286c565b600083015250602082015167ffffffffffffffff81111561293457612933611f78565b5b6129408482850161286c565b60208301525092915050565b60006020828403121561296257612961611edd565b5b600082015167ffffffffffffffff8111156129805761297f611ee2565b5b61298c848285016128c4565b91505092915050565b600060408301600083015184820360008601526129b28282612473565b915050602083015184820360208601526129cc8282612473565b9150508091505092915050565b600060408201905081810360008301526129f38185612995565b90508181036020830152612a078184612995565b90509392505050565b600060208284031215612a2657612a25611edd565b5b6000612a34848285016127c2565b91505092915050565b60006020820190508181036000830152612a578184612995565b905092915050565b6000819050919050565b6000819050919050565b6000612a8e612a89612a8484612a5f565b612a69565b612094565b9050919050565b612a9e81612a73565b82525050565b612aad8161205c565b82525050565b6000604082019050612ac86000830185612a95565b612ad56020830184612aa4565b9392505050565b600060208284031215612af257612af1611edd565b5b600082015167ffffffffffffffff811115612b1057612b0f611ee2565b5b612b1c848285016127ec565b91505092915050565b600082825260208201905092915050565b6000612b4182612386565b612b4b8185612b25565b9350612b5b8185602086016123a2565b612b6481611eec565b840191505092915050565b612b788161205c565b82525050565b612b8781612094565b82525050565b60006060830160008301518482036000860152612baa8282612b36565b9150506020830151612bbf6020860182612b6f565b506040830151612bd26040860182612b7e565b508091505092915050565b60006040820190508181036000830152612bf78185612b8d565b90508181036020830152612c0b8184612b8d565b90509392505050565b60006060820190508181036000830152612c2e8186612b8d565b90508181036020830152612c428185612b8d565b9050612c516040830184612aa4565b949350505050565b6000819050919050565b612c6c81612c59565b8114612c7757600080fd5b50565b600081519050612c8981612c63565b92915050565b600060208284031215612ca557612ca4611edd565b5b6000612cb384828501612c7a565b91505092915050565b60006020820190508181036000830152612cd68184612b8d565b905092915050565b60006040820190508181036000830152612cf88185612b8d565b9050612d076020830184612a95565b939250505056fea26469706673582212203fc450f3415a468d1f0a8c3eb30346480b90205ca1adea6cf9f059f7757a014b64736f6c634300081b0033";

type PointZp_2ConstructorParams =
  | [linkLibraryAddresses: PointZp_2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PointZp_2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PointZp_2__factory extends ContractFactory {
  constructor(...args: PointZp_2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PointZp_2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: PointZp_2LibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(field, overrides || {});
  }
  override deploy(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(field, overrides || {}) as Promise<
      PointZp_2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PointZp_2__factory {
    return super.connect(runner) as PointZp_2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PointZp_2Interface {
    return new Interface(_abi) as PointZp_2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): PointZp_2 {
    return new Contract(address, _abi, runner) as unknown as PointZp_2;
  }
}

export interface PointZp_2LibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
