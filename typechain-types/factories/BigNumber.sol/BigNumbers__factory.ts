/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BigNumbers,
  BigNumbersInterface,
} from "../../BigNumber.sol/BigNumbers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "bn",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "bits",
        type: "uint256",
      },
    ],
    name: "_shr",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "max",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "min",
        type: "bytes",
      },
    ],
    name: "_sub",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
    ],
    name: "bitLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "a",
        type: "bytes",
      },
    ],
    name: "bitLength",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "bitLength",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "signed",
        type: "bool",
      },
    ],
    name: "cmp",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "r",
        type: "tuple",
      },
    ],
    name: "divVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "four",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "gte",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "h",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "neg",
        type: "bool",
      },
    ],
    name: "init",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "neg",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "bitlen",
        type: "uint256",
      },
    ],
    name: "init_",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "neg",
        type: "bool",
      },
    ],
    name: "init__",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
    ],
    name: "isOdd",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "a",
        type: "bytes",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "lte",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "n",
        type: "tuple",
      },
    ],
    name: "mod",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "e",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "n",
        type: "tuple",
      },
    ],
    name: "modexp",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "ai",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "e",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "n",
        type: "tuple",
      },
    ],
    name: "modexp",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "n",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "r",
        type: "tuple",
      },
    ],
    name: "modinvVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "n",
        type: "tuple",
      },
    ],
    name: "modmul",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "pow",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "bits",
        type: "uint256",
      },
    ],
    name: "shl",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "bits",
        type: "uint256",
      },
    ],
    name: "shr",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "b",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "three",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "two",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "bn",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type BigNumbersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BigNumbersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BigNumbers__factory extends ContractFactory {
  constructor(...args: BigNumbersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BigNumbers & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BigNumbers__factory {
    return super.connect(runner) as BigNumbers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BigNumbersInterface {
    return new Interface(_abi) as BigNumbersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BigNumbers {
    return new Contract(address, _abi, runner) as unknown as BigNumbers;
  }
}
