/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FiniteField,
  FiniteFieldInterface,
} from "../../finiteField.sol/FiniteField";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exponent",
        type: "uint256",
      },
    ],
    name: "exp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "isPrime",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "p",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct FiniteField.Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d2e380380610d2e83398181016040528101906100329190610130565b6100418161008d60201b60201c565b610080576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610077906101ba565b60405180910390fd5b80600081905550506102f3565b600060028210156100a157600090506100f0565b6000600290505b8281826100b59190610209565b116100ea57600081846100c8919061027a565b036100d75760009150506100f0565b80806100e2906102ab565b9150506100a8565b50600190505b919050565b600080fd5b6000819050919050565b61010d816100fa565b811461011857600080fd5b50565b60008151905061012a81610104565b92915050565b600060208284031215610146576101456100f5565b5b60006101548482850161011b565b91505092915050565b600082825260208201905092915050565b7f7020646576652065737365726520756e206e756d65726f207072696d6f2e0000600082015250565b60006101a4601e8361015d565b91506101af8261016e565b602082019050919050565b600060208201905081810360008301526101d381610197565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610214826100fa565b915061021f836100fa565b925082820261022d816100fa565b91508282048414831517610244576102436101da565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610285826100fa565b9150610290836100fa565b9250826102a05761029f61024b565b5b828206905092915050565b60006102b6826100fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102e8576102e76101da565b5b600182019050919050565b610a2c806103026000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b2eb1a5a11610071578063b2eb1a5a1461018c578063c4524947146101bc578063c870cbda146101ec578063d629f5281461021c578063f5f565f81461024c578063f6509dd61461027c576100a9565b806342703494146100ae5780639ae8886a146100de578063a253aeee146100fc578063aa28c5be1461012c578063b0df7c1d1461015c575b600080fd5b6100c860048036038101906100c391906105ab565b6102ac565b6040516100d591906105f3565b60405180910390f35b6100e6610314565b6040516100f3919061061d565b60405180910390f35b61011660048036038101906101119190610705565b61031a565b6040516101239190610770565b60405180910390f35b6101466004803603810190610141919061078b565b61034e565b6040516101539190610770565b60405180910390f35b61017660048036038101906101719190610705565b61035e565b6040516101839190610770565b60405180910390f35b6101a660048036038101906101a19190610705565b610380565b6040516101b39190610770565b60405180910390f35b6101d660048036038101906101d191906105ab565b6103b4565b6040516101e39190610770565b60405180910390f35b61020660048036038101906102019190610705565b6103df565b6040516102139190610770565b60405180910390f35b61023660048036038101906102319190610705565b610448565b60405161024391906105f3565b60405180910390f35b610266600480360381019061026191906107b8565b61045d565b604051610273919061061d565b60405180910390f35b6102966004803603810190610291919061078b565b6104d3565b6040516102a39190610770565b60405180910390f35b600060028210156102c0576000905061030f565b6000600290505b8281826102d49190610827565b1161030957600081846102e79190610898565b036102f657600091505061030f565b8080610301906108c9565b9150506102c7565b50600190505b919050565b60005481565b610322610553565b6103466000548061033657610335610869565b5b83600001518560000151086103b4565b905092915050565b610356610553565b819050919050565b610366610553565b61037883610373846104d3565b610380565b905092915050565b610388610553565b6103ac6000548061039c5761039b610869565b5b83600001518560000151096103b4565b905092915050565b6103bc610553565b6040518060200160405280600054846103d59190610898565b8152509050919050565b6103e7610553565b600082600001518460000151101561041f57826000015184600001516000546104109190610911565b61041a9190610945565b610434565b826000015184600001516104339190610945565b5b905061043f816103b4565b91505092915050565b60008160000151836000015114905092915050565b6000806001905060008054856104739190610898565b905060008490505b60008111156104c7576001808216036104a5576000548061049f5761049e610869565b5b82840992505b600054806104b6576104b5610869565b5b8283099150600181901c905061047b565b82935050505092915050565b6104db610553565b6000826000015103610522576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610519906109d6565b60405180910390fd5b60006105408360000151600260005461053b9190610945565b61045d565b905061054b816103b4565b915050919050565b6040518060200160405280600081525090565b6000604051905090565b600080fd5b6000819050919050565b61058881610575565b811461059357600080fd5b50565b6000813590506105a58161057f565b92915050565b6000602082840312156105c1576105c0610570565b5b60006105cf84828501610596565b91505092915050565b60008115159050919050565b6105ed816105d8565b82525050565b600060208201905061060860008301846105e4565b92915050565b61061781610575565b82525050565b6000602082019050610632600083018461060e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106868261063d565b810181811067ffffffffffffffff821117156106a5576106a461064e565b5b80604052505050565b60006106b8610566565b90506106c4828261067d565b919050565b6000602082840312156106df576106de610638565b5b6106e960206106ae565b905060006106f984828501610596565b60008301525092915050565b6000806040838503121561071c5761071b610570565b5b600061072a858286016106c9565b925050602061073b858286016106c9565b9150509250929050565b61074e81610575565b82525050565b60208201600082015161076a6000850182610745565b50505050565b60006020820190506107856000830184610754565b92915050565b6000602082840312156107a1576107a0610570565b5b60006107af848285016106c9565b91505092915050565b600080604083850312156107cf576107ce610570565b5b60006107dd85828601610596565b92505060206107ee85828601610596565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061083282610575565b915061083d83610575565b925082820261084b81610575565b91508282048414831517610862576108616107f8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108a382610575565b91506108ae83610575565b9250826108be576108bd610869565b5b828206905092915050565b60006108d482610575565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610906576109056107f8565b5b600182019050919050565b600061091c82610575565b915061092783610575565b925082820190508082111561093f5761093e6107f8565b5b92915050565b600061095082610575565b915061095b83610575565b9250828203905081811115610973576109726107f8565b5b92915050565b600082825260208201905092915050565b7f4469766973696f6e6520706572207a65726f206e6f6e207065726d657373612e600082015250565b60006109c0602083610979565b91506109cb8261098a565b602082019050919050565b600060208201905081810360008301526109ef816109b3565b905091905056fea2646970667358221220500c41504d91c261cb31477b9fc94f308453cdf36051fb81c67f6f7fc027dea764736f6c634300081b0033";

type FiniteFieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FiniteFieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FiniteField__factory extends ContractFactory {
  constructor(...args: FiniteFieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    prime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(prime, overrides || {});
  }
  override deploy(
    prime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(prime, overrides || {}) as Promise<
      FiniteField & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FiniteField__factory {
    return super.connect(runner) as FiniteField__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FiniteFieldInterface {
    return new Interface(_abi) as FiniteFieldInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FiniteField {
    return new Contract(address, _abi, runner) as unknown as FiniteField;
  }
}
