/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BigFiniteField,
  BigFiniteFieldInterface,
} from "../../../field/bigFiniteField.sol/BigFiniteField";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prime",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "value",
        type: "tuple",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "four",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_p",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "three",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "two",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612d7e380380612d7e83398181016040528101906100329190610271565b73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63a48a622a8260006040518363ffffffff1660e01b815260040161006c92919061032a565b600060405180830381865af4158015610089573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906100b29190610446565b6000808201518160000190816100c8919061069b565b5060208201518160010160006101000a81548160ff021916908315150217905550604082015181600201559050505061076d565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101638261011a565b810181811067ffffffffffffffff821117156101825761018161012b565b5b80604052505050565b60006101956100fc565b90506101a1828261015a565b919050565b600067ffffffffffffffff8211156101c1576101c061012b565b5b6101ca8261011a565b9050602081019050919050565b60005b838110156101f55780820151818401526020810190506101da565b60008484015250505050565b600061021461020f846101a6565b61018b565b9050828152602081018484840111156102305761022f610115565b5b61023b8482856101d7565b509392505050565b600082601f83011261025857610257610110565b5b8151610268848260208601610201565b91505092915050565b60006020828403121561028757610286610106565b5b600082015167ffffffffffffffff8111156102a5576102a461010b565b5b6102b184828501610243565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006102e1826102ba565b6102eb81856102c5565b93506102fb8185602086016101d7565b6103048161011a565b840191505092915050565b60008115159050919050565b6103248161030f565b82525050565b6000604082019050818103600083015261034481856102d6565b9050610353602083018461031b565b9392505050565b600080fd5b600080fd5b61036d8161030f565b811461037857600080fd5b50565b60008151905061038a81610364565b92915050565b6000819050919050565b6103a381610390565b81146103ae57600080fd5b50565b6000815190506103c08161039a565b92915050565b6000606082840312156103dc576103db61035a565b5b6103e6606061018b565b9050600082015167ffffffffffffffff8111156104065761040561035f565b5b61041284828501610243565b60008301525060206104268482850161037b565b602083015250604061043a848285016103b1565b60408301525092915050565b60006020828403121561045c5761045b610106565b5b600082015167ffffffffffffffff81111561047a5761047961010b565b5b610486848285016103c6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104d657607f821691505b6020821081036104e9576104e861048f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610514565b61055b8683610514565b95508019841693508086168417925050509392505050565b6000819050919050565b600061059861059361058e84610390565b610573565b610390565b9050919050565b6000819050919050565b6105b28361057d565b6105c66105be8261059f565b848454610521565b825550505050565b600090565b6105db6105ce565b6105e68184846105a9565b505050565b5b8181101561060a576105ff6000826105d3565b6001810190506105ec565b5050565b601f82111561064f57610620816104ef565b61062984610504565b81016020851015610638578190505b61064c61064485610504565b8301826105eb565b50505b505050565b600082821c905092915050565b600061067260001984600802610654565b1980831691505092915050565b600061068b8383610661565b9150826002028217905092915050565b6106a4826102ba565b67ffffffffffffffff8111156106bd576106bc61012b565b5b6106c782546104be565b6106d282828561060e565b600060209050601f83116001811461070557600084156106f3578287015190505b6106fd858261067f565b865550610765565b601f198416610713866104ef565b60005b8281101561073b57848901518255600182019150602085019450602081019050610716565b868310156107585784890151610754601f891682610661565b8355505b6001600288020188555050505b505050505050565b6126028061077c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a672d1001161008c578063bc1b392d11610066578063bc1b392d14610287578063d4d45554146102a5578063f2388acb146102d5578063fb2bedad146102f3576100ea565b8063a672d100146101f7578063a9a52e7e14610227578063b5e2832514610257576100ea565b806345caa117116100c857806345caa1171461017f5780635fdf05d71461019d578063901717d1146101bb578063a1fca2b6146101d9576100ea565b8063085eb2b9146100ef57806312f7411b1461011f578063170147421461014f575b600080fd5b61010960048036038101906101049190611be3565b610323565b6040516101169190611d43565b60405180910390f35b61013960048036038101906101349190611d65565b610425565b6040516101469190611d43565b60405180910390f35b61016960048036038101906101649190611ddd565b61062b565b6040516101769190611d43565b60405180910390f35b6101876107b6565b6040516101949190611d43565b60405180910390f35b6101a5610843565b6040516101b29190611d43565b60405180910390f35b6101c36108d0565b6040516101d09190611d43565b60405180910390f35b6101e161095d565b6040516101ee9190611d43565b60405180910390f35b610211600480360381019061020c9190611be3565b6109ea565b60405161021e9190611d43565b60405180910390f35b610241600480360381019061023c9190611d65565b610d9d565b60405161024e9190611d43565b60405180910390f35b610271600480360381019061026c9190611d65565b611020565b60405161027e9190611d43565b60405180910390f35b61028f6112a6565b60405161029c9190611d43565b60405180910390f35b6102bf60048036038101906102ba9190611d65565b611333565b6040516102cc9190611e35565b60405180910390f35b6102dd6115a9565b6040516102ea9190611ea0565b60405180910390f35b61030d60048036038101906103089190611d65565b61167a565b60405161031a9190611d43565b60405180910390f35b61032b6118fd565b81600001516000808260000151905060208101519150600082036103cf5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016103809190611f7a565b602060405180830381865af415801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190611fb1565b6103ca57600080fd5b61041a565b600060208460000151516103e3919061200d565b1480156104105750600161010060018560400151610401919061206d565b61040b919061200d565b83901c145b61041957600080fd5b5b849350505050919050565b61042d6118fd565b82600001516000808260000151905060208101519150600082036104d15773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016104829190611f7a565b602060405180830381865af415801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190611fb1565b6104cc57600080fd5b61051c565b600060208460000151516104e5919061200d565b1480156105125750600161010060018560400151610503919061206d565b61050d919061200d565b83901c145b61051b57600080fd5b5b84600001516000808260000151905060208101519150600082036105c05773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016105719190611f7a565b602060405180830381865af415801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190611fb1565b6105bb57600080fd5b61060b565b600060208460000151516105d4919061200d565b14801561060157506001610100600185604001516105f2919061206d565b6105fc919061200d565b83901c145b61060a57600080fd5b5b61061d896106188a6109ea565b611020565b965050505050505092915050565b6106336118fd565b816000808260000151905060208101519150600082036106d35773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016106849190611f7a565b602060405180830381865af41580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190611fb1565b6106ce57600080fd5b61071e565b600060208460000151516106e7919061200d565b1480156107145750600161010060018560400151610705919061206d565b61070f919061200d565b83901c145b61071d57600080fd5b5b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__637afa85538860006040518363ffffffff1660e01b8152600401610763929190612259565b600060405180830381865af4158015610780573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107a99190612395565b8152509350505050919050565b6107be6118fd565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6345caa1176040518163ffffffff1660e01b8152600401600060405180830381865af4158015610812573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061083b9190612395565b815250905090565b61084b6118fd565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865af415801561089f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108c89190612395565b815250905090565b6108d86118fd565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63901717d16040518163ffffffff1660e01b8152600401600060405180830381865af415801561092c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109559190612395565b815250905090565b6109656118fd565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63a1fca2b66040518163ffffffff1660e01b8152600401600060405180830381865af41580156109b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109e29190612395565b815250905090565b6109f26118fd565b8160000151600080826000015190506020810151915060008203610a965773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610a479190611f7a565b602060405180830381865af4158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611fb1565b610a9157600080fd5b610ae1565b60006020846000015151610aaa919061200d565b148015610ad75750600161010060018560400151610ac8919061206d565b610ad2919061200d565b83901c145b610ae057600080fd5b5b600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc39804e876000015173__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af4158015610b4b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b749190612395565b60006040518463ffffffff1660e01b8152600401610b94939291906123ed565b602060405180830381865af4158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190612468565b03610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c906124f2565b60405180910390fd5b610d9373__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630e7671f2876000015173__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630a4638fd600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865af4158015610c9c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cc59190612395565b6040518363ffffffff1660e01b8152600401610ce2929190612512565b600060405180830381865af4158015610cff573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d289190612395565b60006040518463ffffffff1660e01b8152600401610d4893929190612549565b600060405180830381865af4158015610d65573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d8e9190612395565b61062b565b9350505050919050565b610da56118fd565b8260000151600080826000015190506020810151915060008203610e495773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610dfa9190611f7a565b602060405180830381865af4158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b9190611fb1565b610e4457600080fd5b610e94565b60006020846000015151610e5d919061200d565b148015610e8a5750600161010060018560400151610e7b919061206d565b610e85919061200d565b83901c145b610e9357600080fd5b5b8460000151600080826000015190506020810151915060008203610f385773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610ee99190611f7a565b602060405180830381865af4158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190611fb1565b610f3357600080fd5b610f83565b60006020846000015151610f4c919061200d565b148015610f795750600161010060018560400151610f6a919061206d565b610f74919061200d565b83901c145b610f8257600080fd5b5b61101273__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6398cdcfb28b600001518b600001516040518363ffffffff1660e01b8152600401610fc7929190612595565b600060405180830381865af4158015610fe4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061100d9190612395565b61062b565b965050505050505092915050565b6110286118fd565b82600001516000808260000151905060208101519150600082036110cc5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b815260040161107d9190611f7a565b602060405180830381865af415801561109a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110be9190611fb1565b6110c757600080fd5b611117565b600060208460000151516110e0919061200d565b14801561110d57506001610100600185604001516110fe919061206d565b611108919061200d565b83901c145b61111657600080fd5b5b84600001516000808260000151905060208101519150600082036111bb5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b815260040161116c9190611f7a565b602060405180830381865af4158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ad9190611fb1565b6111b657600080fd5b611206565b600060208460000151516111cf919061200d565b1480156111fc57506001610100600185604001516111ed919061206d565b6111f7919061200d565b83901c145b61120557600080fd5b5b61129873__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63a5d4ca5b8b600001518b6000015160006040518463ffffffff1660e01b815260040161124d93929190612549565b600060405180830381865af415801561126a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112939190612395565b61062b565b965050505050505092915050565b6112ae6118fd565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af4158015611302573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061132b9190612395565b815250905090565b600082600001516000808260000151905060208101519150600082036113d95773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b815260040161138a9190611f7a565b602060405180830381865af41580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb9190611fb1565b6113d457600080fd5b611424565b600060208460000151516113ed919061200d565b14801561141a575060016101006001856040015161140b919061206d565b611415919061200d565b83901c145b61142357600080fd5b5b84600001516000808260000151905060208101519150600082036114c85773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016114799190611f7a565b602060405180830381865af4158015611496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ba9190611fb1565b6114c357600080fd5b611513565b600060208460000151516114dc919061200d565b14801561150957506001610100600185604001516114fa919061206d565b611504919061200d565b83901c145b61151257600080fd5b5b600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc39804e8b600001518b6000015160006040518463ffffffff1660e01b8152600401611559939291906123ed565b602060405180830381865af4158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a9190612468565b14965050505050505092915050565b6115b1611916565b60006040518060600160405290816000820180546115ce906120d0565b80601f01602080910402602001604051908101604052809291908181526020018280546115fa906120d0565b80156116475780601f1061161c57610100808354040283529160200191611647565b820191906000526020600020905b81548152906001019060200180831161162a57829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905090565b6116826118fd565b82600001516000808260000151905060208101519150600082036117265773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016116d79190611f7a565b602060405180830381865af41580156116f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117189190611fb1565b61172157600080fd5b611771565b6000602084600001515161173a919061200d565b1480156117675750600161010060018560400151611758919061206d565b611762919061200d565b83901c145b61177057600080fd5b5b84600001516000808260000151905060208101519150600082036118155773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016117c69190611f7a565b602060405180830381865af41580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190611fb1565b61181057600080fd5b611860565b60006020846000015151611829919061200d565b1480156118565750600161010060018560400151611847919061206d565b611851919061200d565b83901c145b61185f57600080fd5b5b6118ef73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630a4638fd8b600001518b600001516040518363ffffffff1660e01b81526004016118a4929190612595565b600060405180830381865af41580156118c1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118ea9190612395565b61062b565b965050505050505092915050565b6040518060200160405280611910611916565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61199b82611952565b810181811067ffffffffffffffff821117156119ba576119b9611963565b5b80604052505050565b60006119cd611939565b90506119d98282611992565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115611a0857611a07611963565b5b611a1182611952565b9050602081019050919050565b82818337600083830152505050565b6000611a40611a3b846119ed565b6119c3565b905082815260208101848484011115611a5c57611a5b6119e8565b5b611a67848285611a1e565b509392505050565b600082601f830112611a8457611a836119e3565b5b8135611a94848260208601611a2d565b91505092915050565b60008115159050919050565b611ab281611a9d565b8114611abd57600080fd5b50565b600081359050611acf81611aa9565b92915050565b6000819050919050565b611ae881611ad5565b8114611af357600080fd5b50565b600081359050611b0581611adf565b92915050565b600060608284031215611b2157611b2061194d565b5b611b2b60606119c3565b9050600082013567ffffffffffffffff811115611b4b57611b4a6119de565b5b611b5784828501611a6f565b6000830152506020611b6b84828501611ac0565b6020830152506040611b7f84828501611af6565b60408301525092915050565b600060208284031215611ba157611ba061194d565b5b611bab60206119c3565b9050600082013567ffffffffffffffff811115611bcb57611bca6119de565b5b611bd784828501611b0b565b60008301525092915050565b600060208284031215611bf957611bf8611943565b5b600082013567ffffffffffffffff811115611c1757611c16611948565b5b611c2384828501611b8b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c66578082015181840152602081019050611c4b565b60008484015250505050565b6000611c7d82611c2c565b611c878185611c37565b9350611c97818560208601611c48565b611ca081611952565b840191505092915050565b611cb481611a9d565b82525050565b611cc381611ad5565b82525050565b60006060830160008301518482036000860152611ce68282611c72565b9150506020830151611cfb6020860182611cab565b506040830151611d0e6040860182611cba565b508091505092915050565b60006020830160008301518482036000860152611d368282611cc9565b9150508091505092915050565b60006020820190508181036000830152611d5d8184611d19565b905092915050565b60008060408385031215611d7c57611d7b611943565b5b600083013567ffffffffffffffff811115611d9a57611d99611948565b5b611da685828601611b8b565b925050602083013567ffffffffffffffff811115611dc757611dc6611948565b5b611dd385828601611b8b565b9150509250929050565b600060208284031215611df357611df2611943565b5b600082013567ffffffffffffffff811115611e1157611e10611948565b5b611e1d84828501611b0b565b91505092915050565b611e2f81611a9d565b82525050565b6000602082019050611e4a6000830184611e26565b92915050565b60006060830160008301518482036000860152611e6d8282611c72565b9150506020830151611e826020860182611cab565b506040830151611e956040860182611cba565b508091505092915050565b60006020820190508181036000830152611eba8184611e50565b905092915050565b600082825260208201905092915050565b6000611ede82611c2c565b611ee88185611ec2565b9350611ef8818560208601611c48565b611f0181611952565b840191505092915050565b611f1581611a9d565b82525050565b611f2481611ad5565b82525050565b60006060830160008301518482036000860152611f478282611ed3565b9150506020830151611f5c6020860182611f0c565b506040830151611f6f6040860182611f1b565b508091505092915050565b60006020820190508181036000830152611f948184611f2a565b905092915050565b600081519050611fab81611aa9565b92915050565b600060208284031215611fc757611fc6611943565b5b6000611fd584828501611f9c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061201882611ad5565b915061202383611ad5565b92508261203357612032611fde565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207882611ad5565b915061208383611ad5565b925082820390508181111561209b5761209a61203e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120e857607f821691505b6020821081036120fb576120fa6120a1565b5b50919050565b60008190508160005260206000209050919050565b60008154612123816120d0565b61212d8186611ec2565b94506001821660008114612148576001811461215e57612191565b60ff198316865281151560200286019350612191565b61216785612101565b60005b838110156121895781548189015260018201915060208101905061216a565b808801955050505b50505092915050565b60008160001c9050919050565b600060ff82169050919050565b60006121c76121c28361219a565b6121a7565b9050919050565b6000819050919050565b60006121eb6121e68361219a565b6121ce565b9050919050565b6000606083016000808401858303600087015261220f8382612116565b92505060018401549050612222816121b4565b61222f6020870182611f0c565b5060028401549050612240816121d8565b61224d6040870182611f1b565b50819250505092915050565b600060408201905081810360008301526122738185611f2a565b9050818103602083015261228781846121f2565b90509392505050565b60006122a361229e846119ed565b6119c3565b9050828152602081018484840111156122bf576122be6119e8565b5b6122ca848285611c48565b509392505050565b600082601f8301126122e7576122e66119e3565b5b81516122f7848260208601612290565b91505092915050565b60008151905061230f81611adf565b92915050565b60006060828403121561232b5761232a61194d565b5b61233560606119c3565b9050600082015167ffffffffffffffff811115612355576123546119de565b5b612361848285016122d2565b600083015250602061237584828501611f9c565b602083015250604061238984828501612300565b60408301525092915050565b6000602082840312156123ab576123aa611943565b5b600082015167ffffffffffffffff8111156123c9576123c8611948565b5b6123d584828501612315565b91505092915050565b6123e781611a9d565b82525050565b600060608201905081810360008301526124078186611f2a565b9050818103602083015261241b8185611f2a565b905061242a60408301846123de565b949350505050565b6000819050919050565b61244581612432565b811461245057600080fd5b50565b6000815190506124628161243c565b92915050565b60006020828403121561247e5761247d611943565b5b600061248c84828501612453565b91505092915050565b600082825260208201905092915050565b7f496e766572736f206469207a65726f206e6f6e20646566696e69746f2e000000600082015250565b60006124dc601d83612495565b91506124e7826124a6565b602082019050919050565b6000602082019050818103600083015261250b816124cf565b9050919050565b6000604082019050818103600083015261252c81856121f2565b905081810360208301526125408184611f2a565b90509392505050565b600060608201905081810360008301526125638186611f2a565b905081810360208301526125778185611f2a565b9050818103604083015261258b81846121f2565b9050949350505050565b600060408201905081810360008301526125af8185611f2a565b905081810360208301526125c38184611f2a565b9050939250505056fea26469706673582212204bd5a017debc0b2e1a87834449c3550eb68458ec4abfcbfbe984e84f9be9ff8864736f6c634300081b0033";

type BigFiniteFieldConstructorParams =
  | [linkLibraryAddresses: BigFiniteFieldLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BigFiniteFieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BigFiniteField__factory extends ContractFactory {
  constructor(...args: BigFiniteFieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BigFiniteField__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BigFiniteFieldLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    prime: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(prime, overrides || {});
  }
  override deploy(
    prime: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(prime, overrides || {}) as Promise<
      BigFiniteField & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BigFiniteField__factory {
    return super.connect(runner) as BigFiniteField__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BigFiniteFieldInterface {
    return new Interface(_abi) as BigFiniteFieldInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BigFiniteField {
    return new Contract(address, _abi, runner) as unknown as BigFiniteField;
  }
}

export interface BigFiniteFieldLibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
