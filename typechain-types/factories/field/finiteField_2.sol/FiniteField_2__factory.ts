/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FiniteField_2,
  FiniteField_2Interface,
} from "../../../field/finiteField_2.sol/FiniteField_2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prime",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "neg",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "bitlen",
            type: "uint256",
          },
        ],
        internalType: "struct BigNumber",
        name: "value",
        type: "tuple",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "p",
    outputs: [
      {
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "neg",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "bitlen",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612c98380380612c9883398181016040528101906100329190610271565b73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63f33d58568260006040518363ffffffff1660e01b815260040161006c92919061032a565b600060405180830381865af4158015610089573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906100b29190610446565b6000808201518160000190816100c8919061069b565b5060208201518160010160006101000a81548160ff021916908315150217905550604082015181600201559050505061076d565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101638261011a565b810181811067ffffffffffffffff821117156101825761018161012b565b5b80604052505050565b60006101956100fc565b90506101a1828261015a565b919050565b600067ffffffffffffffff8211156101c1576101c061012b565b5b6101ca8261011a565b9050602081019050919050565b60005b838110156101f55780820151818401526020810190506101da565b60008484015250505050565b600061021461020f846101a6565b61018b565b9050828152602081018484840111156102305761022f610115565b5b61023b8482856101d7565b509392505050565b600082601f83011261025857610257610110565b5b8151610268848260208601610201565b91505092915050565b60006020828403121561028757610286610106565b5b600082015167ffffffffffffffff8111156102a5576102a461010b565b5b6102b184828501610243565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006102e1826102ba565b6102eb81856102c5565b93506102fb8185602086016101d7565b6103048161011a565b840191505092915050565b60008115159050919050565b6103248161030f565b82525050565b6000604082019050818103600083015261034481856102d6565b9050610353602083018461031b565b9392505050565b600080fd5b600080fd5b61036d8161030f565b811461037857600080fd5b50565b60008151905061038a81610364565b92915050565b6000819050919050565b6103a381610390565b81146103ae57600080fd5b50565b6000815190506103c08161039a565b92915050565b6000606082840312156103dc576103db61035a565b5b6103e6606061018b565b9050600082015167ffffffffffffffff8111156104065761040561035f565b5b61041284828501610243565b60008301525060206104268482850161037b565b602083015250604061043a848285016103b1565b60408301525092915050565b60006020828403121561045c5761045b610106565b5b600082015167ffffffffffffffff81111561047a5761047961010b565b5b610486848285016103c6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104d657607f821691505b6020821081036104e9576104e861048f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610514565b61055b8683610514565b95508019841693508086168417925050509392505050565b6000819050919050565b600061059861059361058e84610390565b610573565b610390565b9050919050565b6000819050919050565b6105b28361057d565b6105c66105be8261059f565b848454610521565b825550505050565b600090565b6105db6105ce565b6105e68184846105a9565b505050565b5b8181101561060a576105ff6000826105d3565b6001810190506105ec565b5050565b601f82111561064f57610620816104ef565b61062984610504565b81016020851015610638578190505b61064c61064485610504565b8301826105eb565b50505b505050565b600082821c905092915050565b600061067260001984600802610654565b1980831691505092915050565b600061068b8383610661565b9150826002028217905092915050565b6106a4826102ba565b67ffffffffffffffff8111156106bd576106bc61012b565b5b6106c782546104be565b6106d282828561060e565b600060209050601f83116001811461070557600084156106f3578287015190505b6106fd858261067f565b865550610765565b601f198416610713866104ef565b60005b8281101561073b57848901518255600182019150602085019450602081019050610716565b868310156107585784890151610754601f891682610661565b8355505b6001600288020188555050505b505050505050565b61251c8061077c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a9a52e7e11610066578063a9a52e7e14610183578063b5e28325146101b3578063bc1b392d146101e3578063d4d4555414610201578063fb2bedad146102315761009e565b8063085eb2b9146100a357806312f7411b146100d357806317014742146101035780639ae8886a14610133578063a672d10014610153575b600080fd5b6100bd60048036038101906100b89190611ad8565b610261565b6040516100ca9190611c38565b60405180910390f35b6100ed60048036038101906100e89190611c5a565b610378565b6040516100fa9190611c38565b60405180910390f35b61011d60048036038101906101189190611cd2565b6105a8565b60405161012a9190611c38565b60405180910390f35b61013b610748565b60405161014a93929190611d83565b60405180910390f35b61016d60048036038101906101689190611ad8565b6107f5565b60405161017a9190611c38565b60405180910390f35b61019d60048036038101906101989190611c5a565b610bbd565b6040516101aa9190611c38565b60405180910390f35b6101cd60048036038101906101c89190611c5a565b610ee9565b6040516101da9190611c38565b60405180910390f35b6101eb611199565b6040516101f89190611c38565b60405180910390f35b61021b60048036038101906102169190611c5a565b611226565b6040516102289190611dc1565b60405180910390f35b61024b60048036038101906102469190611c5a565b6114c6565b6040516102589190611c38565b60405180910390f35b6102696117f2565b816000015160001515816020015115151461028357600080fd5b6000808260000151905060208101519150600082036103225773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016102d39190611e94565b602060405180830381865af41580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103149190611ecb565b61031d57600080fd5b61036d565b600060208460000151516103369190611f27565b14801561036357506001610100600185604001516103549190611f87565b61035e9190611f27565b83901c145b61036c57600080fd5b5b849350505050919050565b6103806117f2565b826000015160001515816020015115151461039a57600080fd5b6000808260000151905060208101519150600082036104395773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016103ea9190611e94565b602060405180830381865af4158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611ecb565b61043457600080fd5b610484565b6000602084600001515161044d9190611f27565b14801561047a575060016101006001856040015161046b9190611f87565b6104759190611f27565b83901c145b61048357600080fd5b5b846000015160001515816020015115151461049e57600080fd5b60008082600001519050602081015191506000820361053d5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016104ee9190611e94565b602060405180830381865af415801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f9190611ecb565b61053857600080fd5b610588565b600060208460000151516105519190611f27565b14801561057e575060016101006001856040015161056f9190611f87565b6105799190611f27565b83901c145b61058757600080fd5b5b61059a896105958a6107f5565b610ee9565b965050505050505092915050565b6105b06117f2565b816000151581602001511515146105c657600080fd5b6000808260000151905060208101519150600082036106655773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016106169190611e94565b602060405180830381865af4158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106579190611ecb565b61066057600080fd5b6106b0565b600060208460000151516106799190611f27565b1480156106a657506001610100600185604001516106979190611f87565b6106a19190611f27565b83901c145b6106af57600080fd5b5b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__637afa85538860006040518363ffffffff1660e01b81526004016106f5929190612173565b600060405180830381865af4158015610712573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061073b91906122af565b8152509350505050919050565b600080600001805461075990611fea565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611fea565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154905083565b6107fd6117f2565b816000015160001515816020015115151461081757600080fd5b6000808260000151905060208101519150600082036108b65773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016108679190611e94565b602060405180830381865af4158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190611ecb565b6108b157600080fd5b610901565b600060208460000151516108ca9190611f27565b1480156108f757506001610100600185604001516108e89190611f87565b6108f29190611f27565b83901c145b61090057600080fd5b5b600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc39804e876000015173__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af415801561096b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061099491906122af565b60006040518463ffffffff1660e01b81526004016109b493929190612307565b602060405180830381865af41580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190612382565b03610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c9061240c565b60405180910390fd5b610bb373__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630e7671f2876000015173__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630a4638fd600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__635fdf05d76040518163ffffffff1660e01b8152600401600060405180830381865af4158015610abc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ae591906122af565b6040518363ffffffff1660e01b8152600401610b0292919061242c565b600060405180830381865af4158015610b1f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b4891906122af565b60006040518463ffffffff1660e01b8152600401610b6893929190612463565b600060405180830381865af4158015610b85573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bae91906122af565b6105a8565b9350505050919050565b610bc56117f2565b8260000151600015158160200151151514610bdf57600080fd5b600080826000015190506020810151915060008203610c7e5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610c2f9190611e94565b602060405180830381865af4158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611ecb565b610c7957600080fd5b610cc9565b60006020846000015151610c929190611f27565b148015610cbf5750600161010060018560400151610cb09190611f87565b610cba9190611f27565b83901c145b610cc857600080fd5b5b8460000151600015158160200151151514610ce357600080fd5b600080826000015190506020810151915060008203610d825773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610d339190611e94565b602060405180830381865af4158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d749190611ecb565b610d7d57600080fd5b610dcd565b60006020846000015151610d969190611f27565b148015610dc35750600161010060018560400151610db49190611f87565b610dbe9190611f27565b83901c145b610dcc57600080fd5b5b610edb73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__637afa855373__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6398cdcfb28d600001518d600001516040518363ffffffff1660e01b8152600401610e2b9291906124af565b600060405180830381865af4158015610e48573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e7191906122af565b60006040518363ffffffff1660e01b8152600401610e90929190612173565b600060405180830381865af4158015610ead573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ed691906122af565b6105a8565b965050505050505092915050565b610ef16117f2565b8260000151600015158160200151151514610f0b57600080fd5b600080826000015190506020810151915060008203610faa5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b8152600401610f5b9190611e94565b602060405180830381865af4158015610f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9c9190611ecb565b610fa557600080fd5b610ff5565b60006020846000015151610fbe9190611f27565b148015610feb5750600161010060018560400151610fdc9190611f87565b610fe69190611f27565b83901c145b610ff457600080fd5b5b846000015160001515816020015115151461100f57600080fd5b6000808260000151905060208101519150600082036110ae5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b815260040161105f9190611e94565b602060405180830381865af415801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190611ecb565b6110a957600080fd5b6110f9565b600060208460000151516110c29190611f27565b1480156110ef57506001610100600185604001516110e09190611f87565b6110ea9190611f27565b83901c145b6110f857600080fd5b5b61118b73__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63a5d4ca5b8b600001518b6000015160006040518463ffffffff1660e01b815260040161114093929190612463565b600060405180830381865af415801561115d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061118691906122af565b6105a8565b965050505050505092915050565b6111a16117f2565b604051806020016040528073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af41580156111f5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061121e91906122af565b815250905090565b6000826000015160001515816020015115151461124257600080fd5b6000808260000151905060208101519150600082036112e15773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016112929190611e94565b602060405180830381865af41580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d39190611ecb565b6112dc57600080fd5b61132c565b600060208460000151516112f59190611f27565b14801561132257506001610100600185604001516113139190611f87565b61131d9190611f27565b83901c145b61132b57600080fd5b5b846000015160001515816020015115151461134657600080fd5b6000808260000151905060208101519150600082036113e55773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016113969190611e94565b602060405180830381865af41580156113b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d79190611ecb565b6113e057600080fd5b611430565b600060208460000151516113f99190611f27565b14801561142657506001610100600185604001516114179190611f87565b6114219190611f27565b83901c145b61142f57600080fd5b5b600073__$7db5d2dbc3ae63372df6c39d501ad0f72a$__63bc39804e8b600001518b6000015160006040518463ffffffff1660e01b815260040161147693929190612307565b602060405180830381865af4158015611493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b79190612382565b14965050505050505092915050565b6114ce6117f2565b82600001516000151581602001511515146114e857600080fd5b6000808260000151905060208101519150600082036115875773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b81526004016115389190611e94565b602060405180830381865af4158015611555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115799190611ecb565b61158257600080fd5b6115d2565b6000602084600001515161159b9190611f27565b1480156115c857506001610100600185604001516115b99190611f87565b6115c39190611f27565b83901c145b6115d157600080fd5b5b84600001516000151581602001511515146115ec57600080fd5b60008082600001519050602081015191506000820361168b5773__$7db5d2dbc3ae63372df6c39d501ad0f72a$__6308d78767846040518263ffffffff1660e01b815260040161163c9190611e94565b602060405180830381865af4158015611659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167d9190611ecb565b61168657600080fd5b6116d6565b6000602084600001515161169f9190611f27565b1480156116cc57506001610100600185604001516116bd9190611f87565b6116c79190611f27565b83901c145b6116d557600080fd5b5b6117e473__$7db5d2dbc3ae63372df6c39d501ad0f72a$__637afa855373__$7db5d2dbc3ae63372df6c39d501ad0f72a$__630a4638fd8d600001518d600001516040518363ffffffff1660e01b81526004016117349291906124af565b600060405180830381865af4158015611751573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061177a91906122af565b60006040518363ffffffff1660e01b8152600401611799929190612173565b600060405180830381865af41580156117b6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117df91906122af565b6105a8565b965050505050505092915050565b604051806020016040528061180561180b565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61189082611847565b810181811067ffffffffffffffff821117156118af576118ae611858565b5b80604052505050565b60006118c261182e565b90506118ce8282611887565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156118fd576118fc611858565b5b61190682611847565b9050602081019050919050565b82818337600083830152505050565b6000611935611930846118e2565b6118b8565b905082815260208101848484011115611951576119506118dd565b5b61195c848285611913565b509392505050565b600082601f830112611979576119786118d8565b5b8135611989848260208601611922565b91505092915050565b60008115159050919050565b6119a781611992565b81146119b257600080fd5b50565b6000813590506119c48161199e565b92915050565b6000819050919050565b6119dd816119ca565b81146119e857600080fd5b50565b6000813590506119fa816119d4565b92915050565b600060608284031215611a1657611a15611842565b5b611a2060606118b8565b9050600082013567ffffffffffffffff811115611a4057611a3f6118d3565b5b611a4c84828501611964565b6000830152506020611a60848285016119b5565b6020830152506040611a74848285016119eb565b60408301525092915050565b600060208284031215611a9657611a95611842565b5b611aa060206118b8565b9050600082013567ffffffffffffffff811115611ac057611abf6118d3565b5b611acc84828501611a00565b60008301525092915050565b600060208284031215611aee57611aed611838565b5b600082013567ffffffffffffffff811115611b0c57611b0b61183d565b5b611b1884828501611a80565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b5b578082015181840152602081019050611b40565b60008484015250505050565b6000611b7282611b21565b611b7c8185611b2c565b9350611b8c818560208601611b3d565b611b9581611847565b840191505092915050565b611ba981611992565b82525050565b611bb8816119ca565b82525050565b60006060830160008301518482036000860152611bdb8282611b67565b9150506020830151611bf06020860182611ba0565b506040830151611c036040860182611baf565b508091505092915050565b60006020830160008301518482036000860152611c2b8282611bbe565b9150508091505092915050565b60006020820190508181036000830152611c528184611c0e565b905092915050565b60008060408385031215611c7157611c70611838565b5b600083013567ffffffffffffffff811115611c8f57611c8e61183d565b5b611c9b85828601611a80565b925050602083013567ffffffffffffffff811115611cbc57611cbb61183d565b5b611cc885828601611a80565b9150509250929050565b600060208284031215611ce857611ce7611838565b5b600082013567ffffffffffffffff811115611d0657611d0561183d565b5b611d1284828501611a00565b91505092915050565b600082825260208201905092915050565b6000611d3782611b21565b611d418185611d1b565b9350611d51818560208601611b3d565b611d5a81611847565b840191505092915050565b611d6e81611992565b82525050565b611d7d816119ca565b82525050565b60006060820190508181036000830152611d9d8186611d2c565b9050611dac6020830185611d65565b611db96040830184611d74565b949350505050565b6000602082019050611dd66000830184611d65565b92915050565b600082825260208201905092915050565b6000611df882611b21565b611e028185611ddc565b9350611e12818560208601611b3d565b611e1b81611847565b840191505092915050565b611e2f81611992565b82525050565b611e3e816119ca565b82525050565b60006060830160008301518482036000860152611e618282611ded565b9150506020830151611e766020860182611e26565b506040830151611e896040860182611e35565b508091505092915050565b60006020820190508181036000830152611eae8184611e44565b905092915050565b600081519050611ec58161199e565b92915050565b600060208284031215611ee157611ee0611838565b5b6000611eef84828501611eb6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f32826119ca565b9150611f3d836119ca565b925082611f4d57611f4c611ef8565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f92826119ca565b9150611f9d836119ca565b9250828203905081811115611fb557611fb4611f58565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061200257607f821691505b60208210810361201557612014611fbb565b5b50919050565b60008190508160005260206000209050919050565b6000815461203d81611fea565b6120478186611ddc565b945060018216600081146120625760018114612078576120ab565b60ff1983168652811515602002860193506120ab565b6120818561201b565b60005b838110156120a357815481890152600182019150602081019050612084565b808801955050505b50505092915050565b60008160001c9050919050565b600060ff82169050919050565b60006120e16120dc836120b4565b6120c1565b9050919050565b6000819050919050565b6000612105612100836120b4565b6120e8565b9050919050565b600060608301600080840185830360008701526121298382612030565b9250506001840154905061213c816120ce565b6121496020870182611e26565b506002840154905061215a816120f2565b6121676040870182611e35565b50819250505092915050565b6000604082019050818103600083015261218d8185611e44565b905081810360208301526121a1818461210c565b90509392505050565b60006121bd6121b8846118e2565b6118b8565b9050828152602081018484840111156121d9576121d86118dd565b5b6121e4848285611b3d565b509392505050565b600082601f830112612201576122006118d8565b5b81516122118482602086016121aa565b91505092915050565b600081519050612229816119d4565b92915050565b60006060828403121561224557612244611842565b5b61224f60606118b8565b9050600082015167ffffffffffffffff81111561226f5761226e6118d3565b5b61227b848285016121ec565b600083015250602061228f84828501611eb6565b60208301525060406122a38482850161221a565b60408301525092915050565b6000602082840312156122c5576122c4611838565b5b600082015167ffffffffffffffff8111156122e3576122e261183d565b5b6122ef8482850161222f565b91505092915050565b61230181611992565b82525050565b600060608201905081810360008301526123218186611e44565b905081810360208301526123358185611e44565b905061234460408301846122f8565b949350505050565b6000819050919050565b61235f8161234c565b811461236a57600080fd5b50565b60008151905061237c81612356565b92915050565b60006020828403121561239857612397611838565b5b60006123a68482850161236d565b91505092915050565b600082825260208201905092915050565b7f496e766572736f20706572207a65726f206e6f6e20646566696e69746f2e0000600082015250565b60006123f6601e836123af565b9150612401826123c0565b602082019050919050565b60006020820190508181036000830152612425816123e9565b9050919050565b60006040820190508181036000830152612446818561210c565b9050818103602083015261245a8184611e44565b90509392505050565b6000606082019050818103600083015261247d8186611e44565b905081810360208301526124918185611e44565b905081810360408301526124a5818461210c565b9050949350505050565b600060408201905081810360008301526124c98185611e44565b905081810360208301526124dd8184611e44565b9050939250505056fea2646970667358221220a73d9e15144a4cbc1d7e80fbcd817a0db5950327f75262a65632dea03a843abe64736f6c634300081b0033";

type FiniteField_2ConstructorParams =
  | [linkLibraryAddresses: FiniteField_2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FiniteField_2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FiniteField_2__factory extends ContractFactory {
  constructor(...args: FiniteField_2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FiniteField_2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FiniteField_2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7db5d2dbc3ae63372df6c39d501ad0f72a\\$__", "g"),
      linkLibraryAddresses["contracts/BigNumber.sol:BigNumbers"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    prime: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(prime, overrides || {});
  }
  override deploy(
    prime: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(prime, overrides || {}) as Promise<
      FiniteField_2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FiniteField_2__factory {
    return super.connect(runner) as FiniteField_2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FiniteField_2Interface {
    return new Interface(_abi) as FiniteField_2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FiniteField_2 {
    return new Contract(address, _abi, runner) as unknown as FiniteField_2;
  }
}

export interface FiniteField_2LibraryAddresses {
  ["contracts/BigNumber.sol:BigNumbers"]: string;
}
