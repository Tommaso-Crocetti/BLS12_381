/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  QuadraticExtension,
  QuadraticExtensionInterface,
} from "../../../field/quadraticExtension.sol/QuadraticExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FiniteField",
        name: "field",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161179a38038061179a833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b611671806101296000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80639d59dc99116100665780639d59dc9914610157578063a031101314610187578063bc1b392d146101b7578063d3439731146101d5578063f73f27021461020557610092565b80625b1935146100975780632966679a146100c75780633edf76af146100f75780635960742214610127575b600080fd5b6100b160048036038101906100ac91906113ac565b610235565b6040516100be9190611446565b60405180910390f35b6100e160048036038101906100dc9190611461565b610395565b6040516100ee9190611446565b60405180910390f35b610111600480360381019061010c91906114a1565b6103ba565b60405161011e9190611446565b60405180910390f35b610141600480360381019061013c91906113ac565b610519565b60405161014e9190611446565b60405180910390f35b610171600480360381019061016c91906113ac565b6108f5565b60405161017e91906114e9565b60405180910390f35b6101a1600480360381019061019c91906113ac565b610a50565b6040516101ae9190611446565b60405180910390f35b6101bf610a72565b6040516101cc9190611446565b60405180910390f35b6101ef60048036038101906101ea91906114a1565b610bb0565b6040516101fc9190611446565b60405180910390f35b61021f600480360381019061021a91906113ac565b6110b1565b60405161022c9190611446565b60405180910390f35b61023d611211565b61038d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c870cbda856000015185600001516040518363ffffffff1660e01b81526004016102a3929190611520565b602060405180830381865afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e4919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c870cbda866020015186602001516040518363ffffffff1660e01b8152600401610347929190611520565b602060405180830381865afa158015610364573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610388919061159a565b610395565b905092915050565b61039d611211565b604051806040016040528084815260200183815250905092915050565b6103c2611211565b61051260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a253aeee846000015185602001516040518363ffffffff1660e01b8152600401610428929190611520565b602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610469919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c870cbda856000015186602001516040518363ffffffff1660e01b81526004016104cc929190611520565b602060405180830381865afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d919061159a565b610395565b9050919050565b610521611211565b6108ed60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c870cbda60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a876000015187600001516040518363ffffffff1660e01b81526004016105c3929190611520565b602060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610604919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a886020015188602001516040518363ffffffff1660e01b8152600401610667929190611520565b602060405180830381865afa158015610684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a8919061159a565b6040518363ffffffff1660e01b81526004016106c5929190611520565b602060405180830381865afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610706919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a253aeee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a886000015188602001516040518363ffffffff1660e01b81526004016107a5929190611520565b602060405180830381865afa1580156107c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e6919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a896020015189600001516040518363ffffffff1660e01b8152600401610849929190611520565b602060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a919061159a565b6040518363ffffffff1660e01b81526004016108a7929190611520565b602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e8919061159a565b610395565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d629f528846000015184600001516040518363ffffffff1660e01b815260040161095b929190611520565b602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c91906115f3565b8015610a48575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d629f528846020015184602001516040518363ffffffff1660e01b8152600401610a06929190611520565b602060405180830381865afa158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4791906115f3565b5b905092915050565b610a58611211565b610a6a83610a6584610bb0565b610519565b905092915050565b610a7a611211565b604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b14919061159a565b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba8919061159a565b815250905090565b610bb8611211565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6509dd660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a253aeee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a886000015189600001516040518363ffffffff1660e01b8152600401610c96929190611520565b602060405180830381865afa158015610cb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd7919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a89602001518a602001516040518363ffffffff1660e01b8152600401610d3a929190611520565b602060405180830381865afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b919061159a565b6040518363ffffffff1660e01b8152600401610d98929190611520565b602060405180830381865afa158015610db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd9919061159a565b6040518263ffffffff1660e01b8152600401610df59190611620565b602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e36919061159a565b90506110a960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a8560000151846040518363ffffffff1660e01b8152600401610e9a929190611520565b602060405180830381865afa158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edb919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2eb1a5a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c870cbda60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061159a565b89602001516040518363ffffffff1660e01b8152600401611004929190611520565b602060405180830381865afa158015611021573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611045919061159a565b856040518363ffffffff1660e01b8152600401611063929190611520565b602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a4919061159a565b610395565b915050919050565b6110b9611211565b61120960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a253aeee856000015185600001516040518363ffffffff1660e01b815260040161111f929190611520565b602060405180830381865afa15801561113c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611160919061159a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a253aeee866020015186602001516040518363ffffffff1660e01b81526004016111c3929190611520565b602060405180830381865afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611204919061159a565b610395565b905092915050565b6040518060400160405280611224611237565b8152602001611231611237565b81525090565b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112a78261125e565b810181811067ffffffffffffffff821117156112c6576112c561126f565b5b80604052505050565b60006112d961124a565b90506112e5828261129e565b919050565b6000819050919050565b6112fd816112ea565b811461130857600080fd5b50565b60008135905061131a816112f4565b92915050565b60006020828403121561133657611335611259565b5b61134060206112cf565b905060006113508482850161130b565b60008301525092915050565b60006040828403121561137257611371611259565b5b61137c60406112cf565b9050600061138c84828501611320565b60008301525060206113a084828501611320565b60208301525092915050565b600080608083850312156113c3576113c2611254565b5b60006113d18582860161135c565b92505060406113e28582860161135c565b9150509250929050565b6113f5816112ea565b82525050565b60208201600082015161141160008501826113ec565b50505050565b60408201600082015161142d60008501826113fb565b50602082015161144060208501826113fb565b50505050565b600060408201905061145b6000830184611417565b92915050565b6000806040838503121561147857611477611254565b5b600061148685828601611320565b925050602061149785828601611320565b9150509250929050565b6000604082840312156114b7576114b6611254565b5b60006114c58482850161135c565b91505092915050565b60008115159050919050565b6114e3816114ce565b82525050565b60006020820190506114fe60008301846114da565b92915050565b60208201600082015161151a60008501826113ec565b50505050565b60006040820190506115356000830185611504565b6115426020830184611504565b9392505050565b600081519050611558816112f4565b92915050565b60006020828403121561157457611573611259565b5b61157e60206112cf565b9050600061158e84828501611549565b60008301525092915050565b6000602082840312156115b0576115af611254565b5b60006115be8482850161155e565b91505092915050565b6115d0816114ce565b81146115db57600080fd5b50565b6000815190506115ed816115c7565b92915050565b60006020828403121561160957611608611254565b5b6000611617848285016115de565b91505092915050565b60006020820190506116356000830184611504565b9291505056fea26469706673582212209e35d5a173e91b24d1545af46f7232507831b76c71602ea001ff71e339f8390164736f6c634300081b0033";

type QuadraticExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuadraticExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuadraticExtension__factory extends ContractFactory {
  constructor(...args: QuadraticExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(field, overrides || {});
  }
  override deploy(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(field, overrides || {}) as Promise<
      QuadraticExtension & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): QuadraticExtension__factory {
    return super.connect(runner) as QuadraticExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuadraticExtensionInterface {
    return new Interface(_abi) as QuadraticExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): QuadraticExtension {
    return new Contract(address, _abi, runner) as unknown as QuadraticExtension;
  }
}
