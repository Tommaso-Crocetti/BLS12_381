/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  QuadraticExtension,
  QuadraticExtensionInterface,
} from "../../../field/quadraticExtension.sol/QuadraticExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BigFiniteField",
        name: "field",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "val",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "neg",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "bitlen",
                type: "uint256",
              },
            ],
            internalType: "struct BigNumber",
            name: "value",
            type: "tuple",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "y",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes",
                    name: "val",
                    type: "bytes",
                  },
                  {
                    internalType: "bool",
                    name: "neg",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "bitlen",
                    type: "uint256",
                  },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
              },
            ],
            internalType: "struct Zp",
            name: "b",
            type: "tuple",
          },
        ],
        internalType: "struct Zp_2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611cbe380380611cbe833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b611b95806101296000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639d2e83f5116100665780639d2e83f514610158578063ab80cf7614610188578063bc1b392d146101b8578063c700da6b146101d6578063fbb740a81461020657610093565b806307a5ecaa14610098578063232b9e5a146100c85780635f6910d4146100f857806364c044fe14610128575b600080fd5b6100b260048036038101906100ad9190611614565b610236565b6040516100bf91906117e7565b60405180910390f35b6100e260048036038101906100dd9190611614565b610630565b6040516100ef91906117e7565b60405180910390f35b610112600480360381019061010d9190611614565b610652565b60405161011f91906117e7565b60405180910390f35b610142600480360381019061013d9190611809565b6107bc565b60405161014f91906117e7565b60405180910390f35b610172600480360381019061016d9190611809565b610ce5565b60405161017f91906117e7565b60405180910390f35b6101a2600480360381019061019d9190611614565b610e4e565b6040516101af9190611861565b60405180910390f35b6101c0610fa9565b6040516101cd91906117e7565b60405180910390f35b6101f060048036038101906101eb919061187c565b6110f1565b6040516101fd91906117e7565b60405180910390f35b610220600480360381019061021b9190611614565b611116565b60405161022d91906117e7565b60405180910390f35b61023e611280565b61062860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2bedad60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325876000015187600001516040518363ffffffff1660e01b81526004016102e092919061191e565b600060405180830381865afa1580156102fd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103269190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325886020015188602001516040518363ffffffff1660e01b815260040161038992919061191e565b600060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103cf9190611ac7565b6040518363ffffffff1660e01b81526004016103ec92919061191e565b600060405180830381865afa158015610409573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104329190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325886000015188602001516040518363ffffffff1660e01b81526004016104d192919061191e565b600060405180830381865afa1580156104ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105179190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325896020015189600001516040518363ffffffff1660e01b815260040161057a92919061191e565b600060405180830381865afa158015610597573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105c09190611ac7565b6040518363ffffffff1660e01b81526004016105dd92919061191e565b600060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106239190611ac7565b6110f1565b905092915050565b610638611280565b61064a83610645846107bc565b610236565b905092915050565b61065a611280565b6107b460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2bedad856000015185600001516040518363ffffffff1660e01b81526004016106c092919061191e565b600060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107069190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2bedad866020015186602001516040518363ffffffff1660e01b815260040161076992919061191e565b600060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107af9190611ac7565b6110f1565b905092915050565b6107c4611280565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a672d10060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e28325886000015189600001516040518363ffffffff1660e01b81526004016108a292919061191e565b600060405180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108e89190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e2832589602001518a602001516040518363ffffffff1660e01b815260040161094b92919061191e565b600060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109919190611ac7565b6040518363ffffffff1660e01b81526004016109ae92919061191e565b600060405180830381865afa1580156109cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109f49190611ac7565b6040518263ffffffff1660e01b8152600401610a109190611b10565b600060405180830381865afa158015610a2d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a569190611ac7565b9050610cdd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e283258560000151846040518363ffffffff1660e01b8152600401610aba92919061191e565b600060405180830381865afa158015610ad7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b009190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5e2832560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2bedad60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610be3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c0c9190611ac7565b89602001516040518363ffffffff1660e01b8152600401610c2e92919061191e565b600060405180830381865afa158015610c4b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c749190611ac7565b856040518363ffffffff1660e01b8152600401610c9292919061191e565b600060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cd89190611ac7565b6110f1565b915050919050565b610ced611280565b610e4760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e846000015185602001516040518363ffffffff1660e01b8152600401610d5392919061191e565b600060405180830381865afa158015610d70573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d999190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2bedad856000015186602001516040518363ffffffff1660e01b8152600401610dfc92919061191e565b600060405180830381865afa158015610e19573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e429190611ac7565b6110f1565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4d45554846000015184600001516040518363ffffffff1660e01b8152600401610eb492919061191e565b602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef59190611b32565b8015610fa1575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4d45554846020015184602001516040518363ffffffff1660e01b8152600401610f5f92919061191e565b602060405180830381865afa158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa09190611b32565b5b905092915050565b610fb1611280565b604051806040016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611027573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110509190611ac7565b815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156110c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110e99190611ac7565b815250905090565b6110f9611280565b604051806040016040528084815260200183815250905092915050565b61111e611280565b61127860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e856000015185600001516040518363ffffffff1660e01b815260040161118492919061191e565b600060405180830381865afa1580156111a1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111ca9190611ac7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9a52e7e866020015186602001516040518363ffffffff1660e01b815260040161122d92919061191e565b600060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112739190611ac7565b6110f1565b905092915050565b60405180604001604052806112936112a6565b81526020016112a06112a6565b81525090565b60405180602001604052806112b96112bf565b81525090565b604051806060016040528060608152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611344826112fb565b810181811067ffffffffffffffff821117156113635761136261130c565b5b80604052505050565b60006113766112e2565b9050611382828261133b565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156113b1576113b061130c565b5b6113ba826112fb565b9050602081019050919050565b82818337600083830152505050565b60006113e96113e484611396565b61136c565b90508281526020810184848401111561140557611404611391565b5b6114108482856113c7565b509392505050565b600082601f83011261142d5761142c61138c565b5b813561143d8482602086016113d6565b91505092915050565b60008115159050919050565b61145b81611446565b811461146657600080fd5b50565b60008135905061147881611452565b92915050565b6000819050919050565b6114918161147e565b811461149c57600080fd5b50565b6000813590506114ae81611488565b92915050565b6000606082840312156114ca576114c96112f6565b5b6114d4606061136c565b9050600082013567ffffffffffffffff8111156114f4576114f3611387565b5b61150084828501611418565b600083015250602061151484828501611469565b60208301525060406115288482850161149f565b60408301525092915050565b60006020828403121561154a576115496112f6565b5b611554602061136c565b9050600082013567ffffffffffffffff81111561157457611573611387565b5b611580848285016114b4565b60008301525092915050565b6000604082840312156115a2576115a16112f6565b5b6115ac604061136c565b9050600082013567ffffffffffffffff8111156115cc576115cb611387565b5b6115d884828501611534565b600083015250602082013567ffffffffffffffff8111156115fc576115fb611387565b5b61160884828501611534565b60208301525092915050565b6000806040838503121561162b5761162a6112ec565b5b600083013567ffffffffffffffff811115611649576116486112f1565b5b6116558582860161158c565b925050602083013567ffffffffffffffff811115611676576116756112f1565b5b6116828582860161158c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116c65780820151818401526020810190506116ab565b60008484015250505050565b60006116dd8261168c565b6116e78185611697565b93506116f78185602086016116a8565b611700816112fb565b840191505092915050565b61171481611446565b82525050565b6117238161147e565b82525050565b6000606083016000830151848203600086015261174682826116d2565b915050602083015161175b602086018261170b565b50604083015161176e604086018261171a565b508091505092915050565b600060208301600083015184820360008601526117968282611729565b9150508091505092915050565b600060408301600083015184820360008601526117c08282611779565b915050602083015184820360208601526117da8282611779565b9150508091505092915050565b6000602082019050818103600083015261180181846117a3565b905092915050565b60006020828403121561181f5761181e6112ec565b5b600082013567ffffffffffffffff81111561183d5761183c6112f1565b5b6118498482850161158c565b91505092915050565b61185b81611446565b82525050565b60006020820190506118766000830184611852565b92915050565b60008060408385031215611893576118926112ec565b5b600083013567ffffffffffffffff8111156118b1576118b06112f1565b5b6118bd85828601611534565b925050602083013567ffffffffffffffff8111156118de576118dd6112f1565b5b6118ea85828601611534565b9150509250929050565b600060208301600083015184820360008601526119118282611729565b9150508091505092915050565b6000604082019050818103600083015261193881856118f4565b9050818103602083015261194c81846118f4565b90509392505050565b600061196861196384611396565b61136c565b90508281526020810184848401111561198457611983611391565b5b61198f8482856116a8565b509392505050565b600082601f8301126119ac576119ab61138c565b5b81516119bc848260208601611955565b91505092915050565b6000815190506119d481611452565b92915050565b6000815190506119e981611488565b92915050565b600060608284031215611a0557611a046112f6565b5b611a0f606061136c565b9050600082015167ffffffffffffffff811115611a2f57611a2e611387565b5b611a3b84828501611997565b6000830152506020611a4f848285016119c5565b6020830152506040611a63848285016119da565b60408301525092915050565b600060208284031215611a8557611a846112f6565b5b611a8f602061136c565b9050600082015167ffffffffffffffff811115611aaf57611aae611387565b5b611abb848285016119ef565b60008301525092915050565b600060208284031215611add57611adc6112ec565b5b600082015167ffffffffffffffff811115611afb57611afa6112f1565b5b611b0784828501611a6f565b91505092915050565b60006020820190508181036000830152611b2a81846118f4565b905092915050565b600060208284031215611b4857611b476112ec565b5b6000611b56848285016119c5565b9150509291505056fea264697066735822122022bccce464c6aac96ceb802f6f73ebc7ab6c56faf8b753475be773b3fde729d264736f6c634300081b0033";

type QuadraticExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuadraticExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuadraticExtension__factory extends ContractFactory {
  constructor(...args: QuadraticExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(field, overrides || {});
  }
  override deploy(
    field: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(field, overrides || {}) as Promise<
      QuadraticExtension & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): QuadraticExtension__factory {
    return super.connect(runner) as QuadraticExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuadraticExtensionInterface {
    return new Interface(_abi) as QuadraticExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): QuadraticExtension {
    return new Contract(address, _abi, runner) as unknown as QuadraticExtension;
  }
}
