/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FiniteField,
  FiniteFieldInterface,
} from "../../../field/finiteField.sol/FiniteField";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "createElement",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "equals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exponent",
        type: "uint256",
      },
    ],
    name: "exp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
    ],
    name: "inverse",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
    ],
    name: "mul_nonres",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "p",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "sub",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "b",
        type: "tuple",
      },
    ],
    name: "sum",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zero",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Zp",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506040516109ed3803806109ed8339818101604052810190602f91906071565b80600081905550506099565b600080fd5b6000819050919050565b6051816040565b8114605b57600080fd5b50565b600081519050606b81604a565b92915050565b6000602082840312156084576083603b565b5b6000609084828501605e565b91505092915050565b610945806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bc1b392d11610071578063bc1b392d1461018c578063c4524947146101aa578063c870cbda146101da578063d629f5281461020a578063f5f565f81461023a578063f6509dd61461026a576100a9565b80639ae8886a146100ae578063a253aeee146100cc578063aa28c5be146100fc578063b0df7c1d1461012c578063b2eb1a5a1461015c575b600080fd5b6100b661029a565b6040516100c39190610522565b60405180910390f35b6100e660048036038101906100e19190610645565b6102a0565b6040516100f391906106b0565b60405180910390f35b610116600480360381019061011191906106cb565b6102d4565b60405161012391906106b0565b60405180910390f35b61014660048036038101906101419190610645565b6102e4565b60405161015391906106b0565b60405180910390f35b61017660048036038101906101719190610645565b610306565b60405161018391906106b0565b60405180910390f35b61019461033a565b6040516101a191906106b0565b60405180910390f35b6101c460048036038101906101bf91906106f8565b610357565b6040516101d191906106b0565b60405180910390f35b6101f460048036038101906101ef9190610645565b610382565b60405161020191906106b0565b60405180910390f35b610224600480360381019061021f9190610645565b6103eb565b6040516102319190610740565b60405180910390f35b610254600480360381019061024f919061075b565b610400565b6040516102619190610522565b60405180910390f35b610284600480360381019061027f91906106cb565b610476565b60405161029191906106b0565b60405180910390f35b60005481565b6102a86104f6565b6102cc600054806102bc576102bb61079b565b5b8360000151856000015108610357565b905092915050565b6102dc6104f6565b819050919050565b6102ec6104f6565b6102fe836102f984610476565b610306565b905092915050565b61030e6104f6565b610332600054806103225761032161079b565b5b8360000151856000015109610357565b905092915050565b6103426104f6565b60405180602001604052806000815250905090565b61035f6104f6565b60405180602001604052806000548461037891906107ca565b8152509050919050565b61038a6104f6565b60008260000151846000015110156103c257826000015184600001516000546103b3919061082a565b6103bd919061085e565b6103d7565b826000015184600001516103d6919061085e565b5b90506103e281610357565b91505092915050565b60008160000151836000015114905092915050565b60008060019050600080548561041691906107ca565b905060008490505b600081111561046a5760018082160361044857600054806104425761044161079b565b5b82840992505b600054806104595761045861079b565b5b8283099150600181901c905061041e565b82935050505092915050565b61047e6104f6565b60008260000151036104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc906108ef565b60405180910390fd5b60006104e3836000015160026000546104de919061085e565b610400565b90506104ee81610357565b915050919050565b6040518060200160405280600081525090565b6000819050919050565b61051c81610509565b82525050565b60006020820190506105376000830184610513565b92915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61059a82610551565b810181811067ffffffffffffffff821117156105b9576105b8610562565b5b80604052505050565b60006105cc61053d565b90506105d88282610591565b919050565b6105e681610509565b81146105f157600080fd5b50565b600081359050610603816105dd565b92915050565b60006020828403121561061f5761061e61054c565b5b61062960206105c2565b90506000610639848285016105f4565b60008301525092915050565b6000806040838503121561065c5761065b610547565b5b600061066a85828601610609565b925050602061067b85828601610609565b9150509250929050565b61068e81610509565b82525050565b6020820160008201516106aa6000850182610685565b50505050565b60006020820190506106c56000830184610694565b92915050565b6000602082840312156106e1576106e0610547565b5b60006106ef84828501610609565b91505092915050565b60006020828403121561070e5761070d610547565b5b600061071c848285016105f4565b91505092915050565b60008115159050919050565b61073a81610725565b82525050565b60006020820190506107556000830184610731565b92915050565b6000806040838503121561077257610771610547565b5b6000610780858286016105f4565b9250506020610791858286016105f4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107d582610509565b91506107e083610509565b9250826107f0576107ef61079b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061083582610509565b915061084083610509565b9250828201905080821115610858576108576107fb565b5b92915050565b600061086982610509565b915061087483610509565b925082820390508181111561088c5761088b6107fb565b5b92915050565b600082825260208201905092915050565b7f4469766973696f6e6520706572207a65726f206e6f6e207065726d657373612e600082015250565b60006108d9602083610892565b91506108e4826108a3565b602082019050919050565b60006020820190508181036000830152610908816108cc565b905091905056fea2646970667358221220e82b7f1d1ee2366ad375cfa61825d3b08d0db66f7ff451d10f0c7e31537fde1864736f6c634300081b0033";

type FiniteFieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FiniteFieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FiniteField__factory extends ContractFactory {
  constructor(...args: FiniteFieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    prime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(prime, overrides || {});
  }
  override deploy(
    prime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(prime, overrides || {}) as Promise<
      FiniteField & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FiniteField__factory {
    return super.connect(runner) as FiniteField__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FiniteFieldInterface {
    return new Interface(_abi) as FiniteFieldInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FiniteField {
    return new Contract(address, _abi, runner) as unknown as FiniteField;
  }
}
