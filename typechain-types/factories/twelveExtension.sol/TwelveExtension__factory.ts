/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TwelveExtension,
  TwelveExtensionInterface,
} from "../../twelveExtension.sol/TwelveExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract SexticExtension",
        name: "six",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610167380380610167833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b603f806101286000396000f3fe6080604052600080fdfea2646970667358221220036f74915f9852e6ce6baba7cb2128b94896af3c106bdfe4f86bc6594cad849564736f6c634300081b0033";

type TwelveExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TwelveExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TwelveExtension__factory extends ContractFactory {
  constructor(...args: TwelveExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    six: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(six, overrides || {});
  }
  override deploy(
    six: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(six, overrides || {}) as Promise<
      TwelveExtension & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TwelveExtension__factory {
    return super.connect(runner) as TwelveExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwelveExtensionInterface {
    return new Interface(_abi) as TwelveExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TwelveExtension {
    return new Contract(address, _abi, runner) as unknown as TwelveExtension;
  }
}
