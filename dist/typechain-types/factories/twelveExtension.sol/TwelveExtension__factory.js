"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwelveExtension__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract SexticExtension",
                name: "six",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051610167380380610167833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b603f806101286000396000f3fe6080604052600080fdfea2646970667358221220036f74915f9852e6ce6baba7cb2128b94896af3c106bdfe4f86bc6594cad849564736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class TwelveExtension__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(six, overrides) {
        return super.getDeployTransaction(six, overrides || {});
    }
    deploy(six, overrides) {
        return super.deploy(six, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.TwelveExtension__factory = TwelveExtension__factory;
TwelveExtension__factory.bytecode = _bytecode;
TwelveExtension__factory.abi = _abi;
