"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bls__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_keys",
                type: "uint256[]",
            },
        ],
        name: "aggregateKeys",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "_sigs",
                type: "uint256[]",
            },
        ],
        name: "aggregateSignature",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "keyGen",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_hash",
                type: "uint256",
            },
        ],
        name: "sign",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_sig",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_hash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_pk",
                type: "uint256",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040526040518060a00160405280606281526020016109be606291396000908161002b9190610310565b5060405180608001604052806042815260200161097c60429139600190816100539190610310565b5060405180606001604052806022815260200161095a602291396002908161007b9190610310565b506040518060c00160405280608181526020016108d960819139600390816100a39190610310565b50600160045560046005553480156100ba57600080fd5b506103e2565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061014157607f821691505b602082108103610154576101536100fa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261017f565b6101c6868361017f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061020d610208610203846101de565b6101e8565b6101de565b9050919050565b6000819050919050565b610227836101f2565b61023b61023382610214565b84845461018c565b825550505050565b600090565b610250610243565b61025b81848461021e565b505050565b5b8181101561027f57610274600082610248565b600181019050610261565b5050565b601f8211156102c4576102958161015a565b61029e8461016f565b810160208510156102ad578190505b6102c16102b98561016f565b830182610260565b50505b505050565b600082821c905092915050565b60006102e7600019846008026102c9565b1980831691505092915050565b600061030083836102d6565b9150826002028217905092915050565b610319826100c0565b67ffffffffffffffff811115610332576103316100cb565b5b61033c8254610129565b610347828285610283565b600060209050601f83116001811461037a5760008415610368578287015190505b61037285826102f4565b8655506103da565b601f1984166103888661015a565b60005b828110156103b05784890151825560018201915060208501945060208101905061038b565b868310156103cd57848901516103c9601f8916826102d6565b8355505b6001600288020188555050505b505050505050565b6104e8806103f16000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630fa900021461005c57806322a5973e1461007a5780632fb1b25f146100aa57806330430402146100da578063afacb0c61461010a575b600080fd5b610064610126565b60405161007191906101d5565b60405180910390f35b610094600480360381019061008f9190610389565b61012b565b6040516100a191906103e1565b60405180910390f35b6100c460048036038101906100bf91906103fc565b610132565b6040516100d191906103e1565b60405180910390f35b6100f460048036038101906100ef9190610429565b610139565b6040516101019190610497565b60405180910390f35b610124600480360381019061011f9190610389565b610142565b005b606090565b6000919050565b6000919050565b60009392505050565b50565b600081519050919050565b600082825260208201905092915050565b60005b8381101561017f578082015181840152602081019050610164565b60008484015250505050565b6000601f19601f8301169050919050565b60006101a782610145565b6101b18185610150565b93506101c1818560208601610161565b6101ca8161018b565b840191505092915050565b600060208201905081810360008301526101ef818461019c565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102488261018b565b810181811067ffffffffffffffff8211171561026757610266610210565b5b80604052505050565b600061027a6101f7565b9050610286828261023f565b919050565b600067ffffffffffffffff8211156102a6576102a5610210565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6102cf816102bc565b81146102da57600080fd5b50565b6000813590506102ec816102c6565b92915050565b60006103056103008461028b565b610270565b90508083825260208201905060208402830185811115610328576103276102b7565b5b835b81811015610351578061033d88826102dd565b84526020840193505060208101905061032a565b5050509392505050565b600082601f8301126103705761036f61020b565b5b81356103808482602086016102f2565b91505092915050565b60006020828403121561039f5761039e610201565b5b600082013567ffffffffffffffff8111156103bd576103bc610206565b5b6103c98482850161035b565b91505092915050565b6103db816102bc565b82525050565b60006020820190506103f660008301846103d2565b92915050565b60006020828403121561041257610411610201565b5b6000610420848285016102dd565b91505092915050565b60008060006060848603121561044257610441610201565b5b6000610450868287016102dd565b9350506020610461868287016102dd565b9250506040610472868287016102dd565b9150509250925092565b60008115159050919050565b6104918161047c565b82525050565b60006020820190506104ac6000830184610488565b9291505056fea264697066735822122078aabcff223259ea25d6475ee30b34cadd45e3eed457f17884091906285b57b664736f6c634300081b0033307835643534336139353431346537663130393164353037393238373661323032636439316465343534373038356162616136386132303562326535613764646661363238663163623464396538326566323135333765323933613636393161653136313665633665373836663063373063663163333865333163373233386535307833393663386330303535353565313536386330306161616230303030616161623078373365646137353332393964376434383333333964383038303961316438303535336264613430326666666535626665666666666666666630303030303030313078316130313131656133393766653639613462316261376236343334626163643736343737346238346633383531326266363733306432613066366230663632343165616266666665623135336666666662396665666666666666666661616162";
const isSuperArgs = (xs) => xs.length > 1;
class Bls__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Bls__factory = Bls__factory;
Bls__factory.bytecode = _bytecode;
Bls__factory.abi = _abi;
