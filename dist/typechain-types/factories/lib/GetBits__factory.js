"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetBits__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                    },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
            },
        ],
        name: "getBits",
        outputs: [
            {
                internalType: "bool[]",
                name: "",
                type: "bool[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "val",
                        type: "bytes",
                    },
                    {
                        internalType: "bool",
                        name: "neg",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "bitlen",
                        type: "uint256",
                    },
                ],
                internalType: "struct BigNumber",
                name: "value",
                type: "tuple",
            },
        ],
        name: "get_millerBits",
        outputs: [
            {
                internalType: "bool[]",
                name: "",
                type: "bool[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x610c2d610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063d57f6fe714610045578063f730f54414610075575b600080fd5b61005f600480360381019061005a91906106b8565b6100a5565b60405161006c91906107bf565b60405180910390f35b61008f600480360381019061008a91906106b8565b610326565b60405161009c91906107bf565b60405180910390f35b6060600080836040015167ffffffffffffffff8111156100c8576100c7610490565b5b6040519080825280602002602001820160405280156100f65781602001602082028036833780820191505090505b5090505b73__$f247edaf7ce9d2535b3fa74e71bc5a3f7a$__63aa7312f68573__$f247edaf7ce9d2535b3fa74e71bc5a3f7a$__63bc1b392d6040518163ffffffff1660e01b8152600401600060405180830381865af415801561015e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101879190610925565b6040518363ffffffff1660e01b81526004016101a4929190610a22565b602060405180830381865af41580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e59190610a59565b1561031c5773__$f247edaf7ce9d2535b3fa74e71bc5a3f7a$__63ee4a4e4e856040518263ffffffff1660e01b81526004016102219190610a86565b602060405180830381865af415801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190610a59565b81838151811061027557610274610aa8565b5b60200260200101901515908115158152505073__$f247edaf7ce9d2535b3fa74e71bc5a3f7a$__636efac6c78560016040518363ffffffff1660e01b81526004016102c1929190610b1c565b600060405180830381865af41580156102de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103079190610925565b9350818061031490610b7b565b9250506100fa565b8092505050919050565b60606000826040015167ffffffffffffffff81111561034857610347610490565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b509050610382836100a5565b90506000600182516103949190610bc3565b67ffffffffffffffff8111156103ad576103ac610490565b5b6040519080825280602002602001820160405280156103db5781602001602082028036833780820191505090505b50905060005b600183516103ef9190610bc3565b81101561045b578260028285516104069190610bc3565b6104109190610bc3565b8151811061042157610420610aa8565b5b602002602001015182828151811061043c5761043b610aa8565b5b60200260200101901515908115158152505080806001019150506103e1565b508092505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c88261047f565b810181811067ffffffffffffffff821117156104e7576104e6610490565b5b80604052505050565b60006104fa610466565b905061050682826104bf565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561053557610534610490565b5b61053e8261047f565b9050602081019050919050565b82818337600083830152505050565b600061056d6105688461051a565b6104f0565b90508281526020810184848401111561058957610588610515565b5b61059484828561054b565b509392505050565b600082601f8301126105b1576105b0610510565b5b81356105c184826020860161055a565b91505092915050565b60008115159050919050565b6105df816105ca565b81146105ea57600080fd5b50565b6000813590506105fc816105d6565b92915050565b6000819050919050565b61061581610602565b811461062057600080fd5b50565b6000813590506106328161060c565b92915050565b60006060828403121561064e5761064d61047a565b5b61065860606104f0565b9050600082013567ffffffffffffffff8111156106785761067761050b565b5b6106848482850161059c565b6000830152506020610698848285016105ed565b60208301525060406106ac84828501610623565b60408301525092915050565b6000602082840312156106ce576106cd610470565b5b600082013567ffffffffffffffff8111156106ec576106eb610475565b5b6106f884828501610638565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610736816105ca565b82525050565b6000610748838361072d565b60208301905092915050565b6000602082019050919050565b600061076c82610701565b610776818561070c565b93506107818361071d565b8060005b838110156107b2578151610799888261073c565b97506107a483610754565b925050600181019050610785565b5085935050505092915050565b600060208201905081810360008301526107d98184610761565b905092915050565b60005b838110156107ff5780820151818401526020810190506107e4565b60008484015250505050565b600061081e6108198461051a565b6104f0565b90508281526020810184848401111561083a57610839610515565b5b6108458482856107e1565b509392505050565b600082601f83011261086257610861610510565b5b815161087284826020860161080b565b91505092915050565b60008151905061088a816105d6565b92915050565b60008151905061089f8161060c565b92915050565b6000606082840312156108bb576108ba61047a565b5b6108c560606104f0565b9050600082015167ffffffffffffffff8111156108e5576108e461050b565b5b6108f18482850161084d565b60008301525060206109058482850161087b565b602083015250604061091984828501610890565b60408301525092915050565b60006020828403121561093b5761093a610470565b5b600082015167ffffffffffffffff81111561095957610958610475565b5b610965848285016108a5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006109958261096e565b61099f8185610979565b93506109af8185602086016107e1565b6109b88161047f565b840191505092915050565b6109cc81610602565b82525050565b600060608301600083015184820360008601526109ef828261098a565b9150506020830151610a04602086018261072d565b506040830151610a1760408601826109c3565b508091505092915050565b60006040820190508181036000830152610a3c81856109d2565b90508181036020830152610a5081846109d2565b90509392505050565b600060208284031215610a6f57610a6e610470565b5b6000610a7d8482850161087b565b91505092915050565b60006020820190508181036000830152610aa081846109d2565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6000819050919050565b6000610b06610b01610afc84610ad7565b610ae1565b610602565b9050919050565b610b1681610aeb565b82525050565b60006040820190508181036000830152610b3681856109d2565b9050610b456020830184610b0d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8682610602565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bb857610bb7610b4c565b5b600182019050919050565b6000610bce82610602565b9150610bd983610602565b9250828203905081811115610bf157610bf0610b4c565b5b9291505056fea2646970667358221220fdd63fa88c3f17fab9aebae5afc9f944ade13bb75a5743aa94b5cb56068c0d4464736f6c634300081b0033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class GetBits__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, GetBits__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$f247edaf7ce9d2535b3fa74e71bc5a3f7a\\$__", "g"), linkLibraryAddresses["contracts/lib/BigNumber.sol:BigNumbers"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.GetBits__factory = GetBits__factory;
GetBits__factory.bytecode = _bytecode;
GetBits__factory.abi = _abi;
